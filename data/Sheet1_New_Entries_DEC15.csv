Old Family #,Family Name,"Looked at? (0 - no, 0.001 - briefly but seems to have issues, 1 - partially, 2 - [mostly] yes)",Subproblem,Variation,Algo ID,Algorithm Description,Final Call,Exact Problem Statement?,Exact?,Time Complexity (Average),Average Case Distribution,Reference?,Citation,Algorithm Name,Year,Paper/Reference Link,Constants,Derived?,Paper Reference for Constants,Time Complexity Improvement?,Transition Class,Time Complexity Class,Time Complexity (Worst Only),Time Encoding,Parameter definitions,Time Complexity Reference,Derived Time Complexity?,Computational Model,Unit of Space,Space Complexity (Auxiliary),Space Complexity Class,Space Complexity Reference,Derived Space Complexity?,Interesting Space Complexity?,Randomized?,"Type of Randomized Algorithm (e.g. Las Vegas, Monte Carlo, Atlantic City)",Approximate?,Approximation Factor (if approximate algorithm),Heuristic-based?,Parallel?,"# of
Processors",Quantum?,GPU-based?,Other References,Problem Statement,"Algorithm family
parameters",Description of Inputs,Ratios of input parameter sizes,n = 1000 value,n = 1000 scale,n = 10^6 value,n = 10^6 scale,n = 10^9 value,n = 10^9 scale,Starting Complexity,Remarks,Papers for ratio evaluations,Domains,,,,,,,,,,,,,,,,,,,,,,
,Graph Diameter,1,,"Arbitrary edge weights, Dense graph",1041,,,1,1,O(V^3 / 2^(logV)^0.5),,,[- Dense APSP algorithm (-)],Dense APSP algorithm,-,-,,,,,,,O(V^3 / 2^(logV)^0.5),,"V: number of vertices
E: number of edges",,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Graph Diameter,1,,"Arbitrary edge weights, Sparse graph",1042,,,1,1,O(V^2logV+VE),,,[- Sparse APSP algorithm (-)],Sparse APSP algorithm,-,-,,,,,,,O(V^2logV+VE),,"V: number of vertices
E: number of edges",,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Graph Diameter,1,,Unweighted,1043,,,1,1,O(V^omega log(V)) where omega is the exponent on matrix multiplication,,,[- Binary representation search with matrix multiplication (-)],Binary representation search with matrix multiplication,-,-,,,,,,,O(V^omega log(V)) where omega is the exponent on matrix multiplication,,"V: number of vertices
E: number of edges",,,Word RAM,words,O(V^2 logV),,storing all the matrices,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Graph Diameter,1,,Bounded integer weights,1044,,,1,1,"O(M*V^omega*polylog(M, V))",,,"[https://dl.acm.org/doi/abs/10.1145/2736283 Cygan, Gabow, Sankowski (2012)]","Cygan, Gabow, Sankowski",2012,https://dl.acm.org/doi/abs/10.1145/2736283,,,,,,,"O(M*V^omega*polylog(M, V))",,"V: number of vertices
E: number of edges
M: maximum absolute value of edge weight",,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,Boolean Matrix Multiplication,1045,,,1,1,,,,,Output-Sensitive Quantum BMM,2018,"https://dl.acm.org/doi/pdf/10.1145/3186893, Theorem 1.6",,,,,,,"O*( \min \{n^{1/3} L^{17/30}, n^{1.5} L^{1/4}\})",,"$n$: dimension of the two square matrices
$L$: the number of 1's in the output matrix",,,Query Complexity,,,,,,,1,,0,,0,0,,1,0,,"boolean matrix multiplication is the multiplication of two boolean matrices, i.e. matrices with entries over the two-element boolean algebra, such that $A\times B = C$ where $C_{i,j} = \bigvee\limits_{k = 1}^{n} (A_{i,k} \wedge B_{k,j})$",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,Boolean Matrix Multiplication (Combinatorial),1046,,,1,1,,,,,,2018,"https://dl.acm.org/doi/pdf/10.1145/3186893, Theorem 1.4",,,,,,,O(n^3 / log^2.25 n),,$n$: dimension of the two square matrices,,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,"boolean matrix multiplication is the multiplication of two boolean matrices, i.e. matrices with entries over the two-element boolean algebra, such that $A\times B = C$ where $C_{i,j} = \bigvee\limits_{k = 1}^{n} (A_{i,k} \wedge B_{k,j})$",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,Boolean Matrix Multiplication,1047,,,1,1,O(n^2),uniform (p=0.5),"https://core.ac.uk/download/pdf/82467126.pdf, Theorem 3.1",,O'Neil 1973,1973,https://core.ac.uk/download/pdf/82467126.pdf,,,,,,,O(n^3),,$n$: dimension of the two square matrices,,,,,,,,,,0,,0,,0,0,,0,0,,"boolean matrix multiplication is the multiplication of two boolean matrices, i.e. matrices with entries over the two-element boolean algebra, such that $A\times B = C$ where $C_{i,j} = \bigvee\limits_{k = 1}^{n} (A_{i,k} \wedge B_{k,j})$",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,Boolean Matrix Multiplication (Combinatorial),1048,,,1,1,,,,[https://scholar.google.com/scholar?hl=en&as_sdt=0%2C22&q=On+economical+construction+of+the+transitive+closure+of+an+oriented+graph.&btnG= Method of Four Russians (1970)],Method of Four Russians,1970,https://scholar.google.com/scholar?hl=en&as_sdt=0%2C22&q=On+economical+construction+of+the+transitive+closure+of+an+oriented+graph.&btnG=,,,,,,,O(n^3/(log n)^2),,$n$: dimension of the two square matrices,,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,"boolean matrix multiplication is the multiplication of two boolean matrices, i.e. matrices with entries over the two-element boolean algebra, such that $A\times B = C$ where $C_{i,j} = \bigvee\limits_{k = 1}^{n} (A_{i,k} \wedge B_{k,j})$",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,Boolean Matrix Multiplication (Combinatorial),1049,,,1,1,,,,"[https://ieeexplore.ieee.org/abstract/document/5438580 Bansal, Williams (2009)]","Bansal, Williams",2009,https://ieeexplore.ieee.org/abstract/document/5438580,,,,,,,O(n^3 * (log log n)^2 / log^2.25 n),,$n$: dimension of the two square matrices,,,Word RAM with word size w = log n,words,,,,,,1,Las Vegas,0,,0,0,,0,0,,"boolean matrix multiplication is the multiplication of two boolean matrices, i.e. matrices with entries over the two-element boolean algebra, such that $A\times B = C$ where $C_{i,j} = \bigvee\limits_{k = 1}^{n} (A_{i,k} \wedge B_{k,j})$",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,Boolean Matrix Multiplication (Combinatorial),1050,,,1,1,,,,"[https://ieeexplore.ieee.org/abstract/document/5438580 Bansal, Williams (2009)]","Bansal, Williams",2009,https://ieeexplore.ieee.org/abstract/document/5438580,,,,,,,O(n^3 * (log log n)^2 / (w * (log n)^7/6)),,"$n$: dimension of the two square matrices
$w$: size of word",,,Word RAM with word size w > log n,words,,,,,,1,Las Vegas,0,,0,0,,0,0,,"boolean matrix multiplication is the multiplication of two boolean matrices, i.e. matrices with entries over the two-element boolean algebra, such that $A\times B = C$ where $C_{i,j} = \bigvee\limits_{k = 1}^{n} (A_{i,k} \wedge B_{k,j})$",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,Boolean Matrix Multiplication (Combinatorial),1051,,,1,1,,,,[https://epubs.siam.org/doi/abs/10.1137/1.9781611973730.16 Chan (2015)],Chan,2015,https://epubs.siam.org/doi/abs/10.1137/1.9781611973730.16,,,,,,,O(n^3 * (log log n)^3 / log^3 n),,$n$: dimension of the two square matrices,,,Word RAM with word size w = log n,words,,,,,,0,,0,,0,0,,0,0,,"boolean matrix multiplication is the multiplication of two boolean matrices, i.e. matrices with entries over the two-element boolean algebra, such that $A\times B = C$ where $C_{i,j} = \bigvee\limits_{k = 1}^{n} (A_{i,k} \wedge B_{k,j})$",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,Boolean Matrix Multiplication (Combinatorial),1052,,,1,1,,,,[https://epubs.siam.org/doi/abs/10.1137/1.9781611973730.16 Chan (2015)],Chan,2015,https://epubs.siam.org/doi/abs/10.1137/1.9781611973730.16,,,,,,,O(n^3 * (log w)^3 / (w * log^2 n)),,"$n$: dimension of the two square matrices
$w$: size of word",,,Word RAM with word size w > log n,words,,,,,,0,,0,,0,0,,0,0,,"boolean matrix multiplication is the multiplication of two boolean matrices, i.e. matrices with entries over the two-element boolean algebra, such that $A\times B = C$ where $C_{i,j} = \bigvee\limits_{k = 1}^{n} (A_{i,k} \wedge B_{k,j})$",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,Boolean Matrix Multiplication (Combinatorial),1053,,,1,1,,,,[https://www.sciencedirect.com/science/article/pii/S0890540118300099 Yu (2015)],Yu,2015,https://www.sciencedirect.com/science/article/pii/S0890540118300099,,,,,,,O(n^3*poly(log log n)/log^4 n),,"$n$: dimension of the two square matrices
$w$: size of word",,,Word RAM with word size w = Omega(log n),words,,,,,,0,,0,,0,0,,0,0,,"boolean matrix multiplication is the multiplication of two boolean matrices, i.e. matrices with entries over the two-element boolean algebra, such that $A\times B = C$ where $C_{i,j} = \bigvee\limits_{k = 1}^{n} (A_{i,k} \wedge B_{k,j})$",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,Online Matrix Vector Multiplication (OMV),1,,,1054,,,1,1,O(n^3 / (log n)^2),,,[http://www.cs.cmu.edu/~./theorylunch/pastSemesterIndices/slides/20070117.pdf Williams (2007)],Williams,2007,http://www.cs.cmu.edu/~./theorylunch/pastSemesterIndices/slides/20070117.pdf,,,,,,,O(n^3 / (log n)^2),,n: dimension of matrix and vector,,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Online Matrix Vector Multiplication (OMV),1,,,1055,,,1,1,O(n^3 / 2^(Omega(sqrt(log n)))),,,"[https://epubs.siam.org/doi/abs/10.1137/1.9781611974782.142 Larsen, Williams (Theorem 1.1) (2017)]","Larsen, Williams (Theorem 1.1)",2017,https://epubs.siam.org/doi/abs/10.1137/1.9781611974782.142,,,,,,,O(n^3 / 2^(Omega(sqrt(log n)))),,n: dimension of matrix and vector,,,Word RAM,words,,,,,,1,Monte Carlo,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Online Matrix Vector Multiplication (OMV),1,,,1056,,,1,1,O(n^(11/4) / sqrt(log n)),,,"[https://epubs.siam.org/doi/abs/10.1137/1.9781611974782.142 Larsen, Williams (follows from Theorem 2.1) (2017)]","Larsen, Williams (follows from Theorem 2.1)",2017,https://epubs.siam.org/doi/abs/10.1137/1.9781611974782.142,,,,,,,O(n^(11/4) / sqrt(log n)),,n: dimension of matrix and vector,,,Cell Probe,words,,,,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Negative Triangle,0,,,1057,,,,,,,,,,2018,"https://dl.acm.org/doi/pdf/10.1145/3186893, Theorem 1.5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting - Comparison,1,,,1058,,,1,1,O(logn),,,[https://epubs.siam.org/doi/abs/10.1137/0217049 Parallel Merge Sort - Cole (1) (1988)],Parallel Merge Sort - Cole (1),1988,https://epubs.siam.org/doi/abs/10.1137/0217049,,,,,,,O(logn),,n: size of list,,,CREW PRAM,words,,,,,,0,,0,,0,1,O(n),0,0,,A sorting algorithm is an algorithm that puts elements of a list in a certain order.,,,,,,,,,,4,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
1,Sorting - Comparison,1,,,1059,,,1,1,O(logn),,,[https://epubs.siam.org/doi/abs/10.1137/0217049 Parallel Merge Sort - Cole (2) (1988)],Parallel Merge Sort - Cole (2),1988,https://epubs.siam.org/doi/abs/10.1137/0217049,,,,,,,O(logn),,n: size of list,,,EREW PRAM,words,,,,,,0,,0,,0,1,O(n),0,0,,A sorting algorithm is an algorithm that puts elements of a list in a certain order.,,,,,,,,,,4,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
5,Maximum Flow,2,Max Flow,,1060,,,1,1,O(V^3),(see max flow in sheet1),,[https://eprints.utas.edu.au/160/1/iplFlow.pdf MKM Algorithm (1978)],MKM Algorithm,1978,https://eprints.utas.edu.au/160/1/iplFlow.pdf,,,,,0,,O(V^3),16,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,Word RAM,words,O(E),"V: 5,
E: 3",https://core.ac.uk/download/pdf/81946904.pdf,,,0,,0,,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,2,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
5,Maximum Flow,2,Max Flow,,1061,,,1,1,O(V^{(5/3)}E^{(2/3)}),(see max flow in sheet1),,[https://link.springer.com/article/10.1007/BF00264254 Galil (1978)],Galil,1978,https://link.springer.com/article/10.1007/BF00264254,,,,,0,,O(V^(5/3)E^(2/3)),16,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,Word RAM,words,O(E),"V: 5,
E: 3",https://link.springer.com/article/10.1007/BF00264254,,,0,,0,,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,2,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
5,Maximum Flow,2,Max Flow,,1062,,,1,1,O(V^3*log(V)/p),(see max flow in sheet1),,[http://users.umiacs.umd.edu/~vishkin/TEACHING/4CLASS/SV82-maxflow.pdf Shiloach (1981)],Shiloach,1981,http://users.umiacs.umd.edu/~vishkin/TEACHING/4CLASS/SV82-maxflow.pdf,,,,,0,,O(V^3*log(V)/p),,"V: number of vertices
E: number of edges
U: maximum edge capacity
P: number of processors",,,Parallel RAM (unclear what type; seems like any could work?),words,O(E),"V: 5,
E: 3",can be derived?,,,0,,0,,0,1,p,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,2,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
5,Maximum Flow,1,Max Flow,,1063,,,1,1,O(VE*logU),(see max flow in sheet1),,[https://www.sciencedirect.com/science/article/pii/002200008590039X Gabow (1985)],Gabow,1985,https://www.sciencedirect.com/science/article/pii/002200008590039X,,,,,0,,O(VE*logU),20,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,Word RAM,words,O(E),"V: 5,
E: 3",can be derived?,,,0,,0,,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,2,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
5,Maximum Flow,1,Max Flow,,1064,,,1,1,"O(E*sqrt(V)*log^2(U)*polylog(E, V, log(U))",(see max flow in sheet1),,"[https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=6979027 Lee, Sidford (2014)]","Lee, Sidford",2014,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=6979027,,,,,0,,"O(E*sqrt(V)*log^2(U)*polylog(E, V, log(U))",,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,Word RAM,words,O(E),"V: 5,
E: 3",(derived in notes),,,0,,0,,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,2,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
5,Maximum Flow,2,Max Flow,,1065,,,1,1,"O(E^{(10/7)}U^{(1/7)}polylog(V, E, log U))",(see max flow in sheet1),,[https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7782974 Madry (2016)],Madry,2016,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7782974,,,,,0,,"O(E^(10/7)U^(1/7)polylog(V, E, log U))",,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,Word RAM,words,O(E),"V: 5,
E: 3",(derived in notes),,,0,,0,,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,2,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
5,Maximum Flow,1,Max Flow,,1066,,,1,1,O(E^{(1+o(1))/sqrt(eps)}),(see max flow in sheet1),,"[https://epubs.siam.org/doi/abs/10.1137/20M1383525 Kathuria, Liu, Sidford (2020)]","Kathuria, Liu, Sidford",2020,https://epubs.siam.org/doi/abs/10.1137/20M1383525,,,,,0,,O(E^(1+o(1))/sqrt(eps)),,"V: number of vertices
E: number of edges
U: maximum edge capacity
eps: approximation parameter",,,Word RAM,words,O(E) or O(V^2) ?,"V: 5,
E: 3","unsure, please look",,,0,,1,1+eps,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,2,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
5,Maximum Flow,1,Max Flow,,1067,,,1,1,O(E^{(4/3+o(1))U^(1/3)}),(see max flow in sheet1),,"[https://epubs.siam.org/doi/abs/10.1137/20M1383525 Kathuria, Liu, Sidford (2020)]","Kathuria, Liu, Sidford",2020,https://epubs.siam.org/doi/abs/10.1137/20M1383525,,,,,0,,O(E^(4/3+o(1))U^(1/3)),,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,Word RAM,words,O(E) or O(V^2) ?,"V: 5,
E: 3","unsure, please look",,,0,,0,,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,2,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
5,Maximum Flow,1,Max Flow,,1068,,,1,1,"O((E+V^{1.5})log(U)polylog(V, E, log U))",(see max flow in sheet1),,[https://arxiv.org/abs/2101.05719 Brand et al (2021)],Brand et al,2021,https://arxiv.org/abs/2101.05719,,,,,0,,"O((E+V^1.5)log(U)polylog(V, E, log U))",,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,Word RAM,words,O(E),"V: 5,
E: 3",(derived in notes),,,1,,0,,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,2,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
5,Maximum Flow,2,Max Flow,,1069,,,1,1,O(E^{(3/2-1/328)}*log(U)*polylog(E)),(see max flow in sheet1),,"[https://arxiv.org/abs/2101.07233 Gao, Liu, Peng (2021)]","Gao, Liu, Peng",2021,https://arxiv.org/abs/2101.07233,,,,,0,,O(E^(3/2-1/328)*log(U)*polylog(E)),,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,Word RAM,words,O(E),"V: 5,
E: 3",(derived in notes),,,0,,0,,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,2,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
5,Maximum Flow,1,Max Flow,,1070,,,1,1,O(E^{(1+o(1))}*log(U)),(see max flow in sheet1),,[https://arxiv.org/abs/2203.00671 Chen et al (2022)],Chen et al,2022,https://arxiv.org/abs/2203.00671,,,,,0,,O(E^(1+o(1))*log(U)),,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,Word RAM,words,O(E),"V: 5,
E: 3",(derived in notes),,,0,,0,,0,0,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,2,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
5,Maximum Flow,2,Max Flow,Integer Maximum Flow,1071,,,1,1,O(V^{1.66} log(V) log(U)),(see max flow in sheet1),,[https://dl.acm.org/citation.cfm?id=290181 Goldberg & Rao (Parallel) (1997)],Goldberg & Rao (Parallel),1997,https://dl.acm.org/citation.cfm?id=290181,,,,,0,4.66,O(V^1.66 log(V) log(U)),,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,PRAM,words,O(V^2),V: 5,https://dl.acm.org/citation.cfm?id=290181,0,,0,,0,,0,1,O(V),0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,2,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
5,Maximum Flow,2,Max Flow,Integer Maximum Flow,1072,,,1,1,O(E^{0.5} V log(V) log(U)),(see max flow in sheet1),,[https://dl.acm.org/citation.cfm?id=290181 Goldberg & Rao (Parallel) (1997)],Goldberg & Rao (Parallel),1997,https://dl.acm.org/citation.cfm?id=290181,,,,,0,5,O(E^0.5 V log(V) log(U)),,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,PRAM,words,O(V^2),V: 5,https://dl.acm.org/citation.cfm?id=290181,0,,0,,0,,0,1,O(V),0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,2,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Multiplication,1,,,1073,,,1,1,O(n^3/log n),,,[https://scholar.google.com/scholar?hl=en&as_sdt=0%2C22&q=On+economical+construction+of+the+transitive+closure+of+an+oriented+graph.&btnG= Method of Four Russians (1970)],Method of Four Russians,1970,https://scholar.google.com/scholar?hl=en&as_sdt=0%2C22&q=On+economical+construction+of+the+transitive+closure+of+an+oriented+graph.&btnG=,,,,1,0,,O(n^3/log n),,n: dimension of square matrix,,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,"matrix multiplication or matrix product is a binary operation that produces a matrix
 from two matrices with entries in a field; or; more generally; in a ring
 or even a semiring. ",,,,,,,,,,3,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Multiplication,2,,,1074,,,1,1,O(n^{2.37285956}),Any reasonable nontrivial distribution,https://arxiv.org/abs/2202.08996,"[https://arxiv.org/pdf/2010.05846.pdf Alman, Vassilevska Williams (2020)]","Alman, Vassilevska Williams",2020,https://arxiv.org/pdf/2010.05846.pdf,,,,1,0,,O(n^2.37285956),,n: dimension of square matrix,,,Word RAM,words,O(n^2),n: 5,through re-use of space in recursive branches (response from Virginia),,,0,,0,,0,0,,0,0,,"matrix multiplication or matrix product is a binary operation that produces a matrix
 from two matrices with entries in a field; or; more generally; in a ring
 or even a semiring. ",,,,,,,,,,3,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,5 - Graph Coloring,1,,,1075,,,1,1,O(2.1592^n),,,[https://www.sciencedirect.com/science/article/abs/pii/S0167637704000409?via%3Dihub Byskov (2004)],Byskov,2004,https://www.sciencedirect.com/science/article/abs/pii/S0167637704000409?via%3Dihub,,,,,,,O(2.1592^n),,"n: number of vertices
m: number of edges",,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,"In this case, we wish to determine whether or not a graph is 5-colorable.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,5 - Graph Coloring,1,,,1076,,,1,1,O(2^n*poly(n)),,,"[https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031392 Bjorklund, Husfeldt, Theorem 1 (2006)]","Bjorklund, Husfeldt, Theorem 1",2006,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031392,,,,,,,O(2^n*poly(n)),,"n: number of vertices
m: number of edges",,,Word RAM,words,O(2^n*poly(n)),n: 8,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031392,,,0,,0,,0,0,,0,0,,"In this case, we wish to determine whether or not a graph is 5-colorable.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,5 - Graph Coloring,1,,,1077,,,1,1,O(2.2461^n),,,"[https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031392 Bjorklund, Husfeldt, Proposition 2 (2006)]","Bjorklund, Husfeldt, Proposition 2",2006,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031392,,,,,,,O(2.2461^n),,"n: number of vertices
m: number of edges",,,Word RAM,words,O(poly(n)),n: 7,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031392,,,0,,0,,0,0,,0,0,,"In this case, we wish to determine whether or not a graph is 5-colorable.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,5 - Graph Coloring,1,,,1078,,,1,1,O((2-eps)^n) for some eps>0,,,[https://drops.dagstuhl.de/opus/volltexte/2021/14182/pdf/LIPIcs-ICALP-2021-113.pdf Zamir (2021)],Zamir,2021,https://drops.dagstuhl.de/opus/volltexte/2021/14182/pdf/LIPIcs-ICALP-2021-113.pdf,,,,,,,O((2-eps)^n) for some eps>0,,"n: number of vertices
m: number of edges",,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,"In this case, we wish to determine whether or not a graph is 5-colorable.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,6 - Graph Coloring,1,,,1079,,,1,1,O(2.3289^n),,,"[https://www.sciencedirect.com/science/article/abs/pii/S0167637704000409?via%3Dihub Byskov, Theorem 14 (2004)]","Byskov, Theorem 14",2004,https://www.sciencedirect.com/science/article/abs/pii/S0167637704000409?via%3Dihub,,,,,,,O(2.3289^n),,"n: number of vertices
m: number of edges",,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,"In this case, we wish to determine whether or not a graph is 6-colorable.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,6 - Graph Coloring,1,,,1080,,,1,1,O(2.2680^n),,,"[https://www.sciencedirect.com/science/article/abs/pii/S0167637704000409?via%3Dihub Byskov, Theorem 20 (2004)]","Byskov, Theorem 20",2004,https://www.sciencedirect.com/science/article/abs/pii/S0167637704000409?via%3Dihub,,,,,,,O(2.2680^n),,"n: number of vertices
m: number of edges",,,Word RAM,words,O(2^n),n: 8,https://www.sciencedirect.com/science/article/pii/S0167637704000409,,,0,,0,,0,0,,0,0,,"In this case, we wish to determine whether or not a graph is 6-colorable.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,6 - Graph Coloring,1,,,1081,,,1,1,O(2^n*poly(n)),,,"[https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031392 Bjorklund, Husfeldt, Theorem 1 (2006)]","Bjorklund, Husfeldt, Theorem 1",2006,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031392,,,,,,,O(2^n*poly(n)),,"n: number of vertices
m: number of edges",,,Word RAM,words,O(2^n*poly(n)),n: 8,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031392,,,0,,0,,0,0,,0,0,,"In this case, we wish to determine whether or not a graph is 6-colorable.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,6 - Graph Coloring,1,,,1082,,,1,1,O(2.2461^n),,,"[https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031392 Bjorklund, Husfeldt, Proposition 2 (2006)]","Bjorklund, Husfeldt, Proposition 2",2006,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031392,,,,,,,O(2.2461^n),,"n: number of vertices
m: number of edges",,,Word RAM,words,O(poly(n)),n: 7,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031392,,,0,,0,,0,0,,0,0,,"In this case, we wish to determine whether or not a graph is 6-colorable.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,6 - Graph Coloring,1,,,1083,,,1,1,O((2-eps)^n) for some eps>0,,,[https://drops.dagstuhl.de/opus/volltexte/2021/14182/pdf/LIPIcs-ICALP-2021-113.pdf Zamir (2021)],Zamir,2021,https://drops.dagstuhl.de/opus/volltexte/2021/14182/pdf/LIPIcs-ICALP-2021-113.pdf,,,,,,,O((2-eps)^n) for some eps>0,,"n: number of vertices
m: number of edges",,,Word RAM,words,,,,,,1,Monte Carlo,0,,0,0,,0,0,,"In this case, we wish to determine whether or not a graph is 6-colorable.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,Chromatic Number,1,,,1084,,,1,1,O(n!*poly(n)),,,[https://academic.oup.com/comjnl/article/14/1/38/356253?login=true Christofides (1971)],Christofides,1971,https://academic.oup.com/comjnl/article/14/1/38/356253?login=true,,,,,,,O(n!*poly(n)),,"n: number of vertices
m: number of edges",,,Word RAM,words,O(poly(n)),n: 7,https://link.springer.com/article/10.1007/s00453-007-9149-8,,,0,,0,,0,0,,0,0,,"In this problem, we wish to compute the chromatic number of a graph; that is, the smallest number of colors needed to color the graph.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,Chromatic Number,1,,,1085,,,1,1,O(mn(1+3^(1/3))^n),,,[https://www.sciencedirect.com/science/article/pii/002001907690065X?via%3Dihub Lawler (1976)],Lawler,1976,https://www.sciencedirect.com/science/article/pii/002001907690065X?via%3Dihub,,,,,,,O(mn(1+3^(1/3))^n),,"n: number of vertices
m: number of edges",,,Word RAM,words,O(2^n*log(n)),n: 8,https://www.sciencedirect.com/science/article/pii/S0167637704000409,,,0,,0,,0,0,,0,0,,"In this problem, we wish to compute the chromatic number of a graph; that is, the smallest number of colors needed to color the graph.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,Chromatic Number,1,,,1086,,,1,1,O((4/3+3^(4/3)/4)^n) ~ O(2.4151^n),,,[https://arxiv.org/pdf/cs/0011009.pdf Eppstein (2003)],Eppstein,2003,https://arxiv.org/pdf/cs/0011009.pdf,,,,,,,O((4/3+3^(4/3)/4)^n) ~ O(2.4151^n),,"n: number of vertices
m: number of edges",,,Word RAM,words,O(2^n),n: 8,https://arxiv.org/pdf/cs/0011009.pdf,,,0,,0,,0,0,,0,0,,"In this problem, we wish to compute the chromatic number of a graph; that is, the smallest number of colors needed to color the graph.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,Chromatic Number,1,,,1087,,,1,1,O(80^(n/5)) ~ O(2.4023^n),,,[https://www.sciencedirect.com/science/article/pii/S0167637704000409 Byskov (2004)],Byskov,2004,https://www.sciencedirect.com/science/article/pii/S0167637704000409,,,,,,,O(80^(n/5)) ~ O(2.4023^n),,"n: number of vertices
m: number of edges",,,Word RAM,words,O(2^n),n: 8,https://www.sciencedirect.com/science/article/pii/S0167637704000409,,,0,,0,,0,0,,0,0,,"In this problem, we wish to compute the chromatic number of a graph; that is, the smallest number of colors needed to color the graph.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,Chromatic Number,1,,,1088,,,1,1,O(2^n*poly(n)),,,"[https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031392 Bjorklund, Husfeldt, Theorem 1 (2006)]","Bjorklund, Husfeldt, Theorem 1",2006,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031392,,,,,,,O(2^n*poly(n)),,"n: number of vertices
m: number of edges",,,Word RAM,words,O(2^n*poly(n)),n: 8,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031392,,,0,,0,,0,0,,0,0,,"In this problem, we wish to compute the chromatic number of a graph; that is, the smallest number of colors needed to color the graph.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,Chromatic Number,1,,,1089,,,1,1,O(2.2461^n),,,"[https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031392 Bjorklund, Husfeldt, Proposition 2 (2006)]","Bjorklund, Husfeldt, Proposition 2",2006,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031392,,,,,,,O(2.2461^n),,"n: number of vertices
m: number of edges",,,Word RAM,words,O(poly(n)),n: 7,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031392,,,0,,0,,0,0,,0,0,,"In this problem, we wish to compute the chromatic number of a graph; that is, the smallest number of colors needed to color the graph.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,Chromatic Number,1,,,1090,,,1,1,O(2^n*poly(n)),,,[https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031393 Koivisto (2006)],Koivisto,2006,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031393,,,,,,,O(2^n*poly(n)),,"n: number of vertices
m: number of edges",,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,"In this problem, we wish to compute the chromatic number of a graph; that is, the smallest number of colors needed to color the graph.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,#2 - Graph Coloring,1,,,1091,,,1,1,O(m),Any distribution (runtime is same regardless of input),(same general behavior across all inputs),[ BFS/DFS for connected components (-)],BFS/DFS for connected components,-,,,,,,,,O(m),,"n: number of vertices
m: number of edges",,,Word RAM,words,O(n) auxiliary,n: 3,(can be easily derived),,,0,,0,,0,0,,0,0,,"In this case, we wish to determine the number of all possible 2-colorings of a graph.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,#3 - Graph Coloring,1,,,1092,,,1,1,O(1.7879^n),,,"[https://link.springer.com/chapter/10.1007/978-3-540-45193-8_6 Angelsmark, Jonsson (2003)]","Angelsmark, Jonsson",2003,https://link.springer.com/chapter/10.1007/978-3-540-45193-8_6,,,,,,,O(1.7879^n),,"n: number of vertices
m: number of edges",,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,"In this case, we wish to determine the number of all possible 3-colorings of a graph.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,#3 - Graph Coloring,1,,,1093,,,1,1,O(1.7702^n*poly(n)),,,"[https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.634.4498&rep=rep1&type=pdf Fürer, Kasiviswanathan (2005)]","Fürer, Kasiviswanathan",2005,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.634.4498&rep=rep1&type=pdf,,,,,,,O(1.7702^n*poly(n)),,"n: number of vertices
m: number of edges",,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,"In this case, we wish to determine the number of all possible 3-colorings of a graph.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,#3 - Graph Coloring,1,,,1094,,,1,1,O(1.6262^n),,,[https://link.springer.com/chapter/10.1007/978-3-540-73545-8_9 Fomin; Gaspers & Saurabh (2007)],Fomin; Gaspers & Saurabh,2007,https://link.springer.com/chapter/10.1007/978-3-540-73545-8_9,,,,,,,O(1.6262^n),,"n: number of vertices
m: number of edges",,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,"In this case, we wish to determine the number of all possible 3-colorings of a graph.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,#4 - Graph Coloring,1,,,1095,,,1,1,O(1.9464^n),,,[https://link.springer.com/chapter/10.1007/978-3-540-73545-8_9 Fomin; Gaspers & Saurabh (2007)],Fomin; Gaspers & Saurabh,2007,https://link.springer.com/chapter/10.1007/978-3-540-73545-8_9,,,,,,,O(1.9464^n),,"n: number of vertices
m: number of edges",,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,"In this case, we wish to determine the number of all possible 4-colorings of a graph.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,Chromatic Polynomial,1,,,1096,,,1,1,O(((1+sqrt5)/2)^(n+m)),,,[ Zykov (deletion-contraction) (1949)],Zykov (deletion-contraction),1949,,,,,,,,O(((1+sqrt5)/2)^(n+m)),,"n: number of vertices
m: number of edges",,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,"In this case, we wish to determine the chromatic polynomial of a graph.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,Chromatic Polynomial,1,,,1097,,,1,1,O(2^n*poly(n)),,,"[https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031392 Bjorklund, Husfeldt, Proposition 3 (2006)]","Bjorklund, Husfeldt, Proposition 3",2006,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031392,,,,,,,O(2^n*poly(n)),,"n: number of vertices
m: number of edges",,,Word RAM,words,O(2^n*poly(n)) => O(1.292^n),n: 8,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031392,,,0,,0,,0,0,,0,0,https://www.cambridge.org/core/books/topics-in-chromatic-graph-theory/graph-colouring-algorithms/0057166BDF05B304D0D81D6C1EB911B6,"In this case, we wish to determine the chromatic polynomial of a graph.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,Chromatic Polynomial,1,,,1098,,,1,1,O(2^n*poly(n)),,,[https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031393 Koivisto (2006)],Koivisto,2006,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4031393,,,,,,,O(2^n*poly(n)),,"n: number of vertices
m: number of edges",,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,"In this case, we wish to determine the chromatic polynomial of a graph.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
9,Linear system of equations,2,,General,1099,,,1,1,O (n^3),Presumably any continuous random matrix distribution?,"(none, though intuitively it seems ""rare"" to run into special cases where runtime is smaller)",[ LU decomposition ()],LU decomposition,,,,,,,,,O (n^3),,n: number of variables and number of equations,,,Word RAM,words,O(n^2),n: 5,can be easily derived,,,0,,0,,0,0,,0,0,,"a system of linear equations (or linear system) is a collection of one or
 more linear equations involving the same set of variables.",,,,,,,,,,,,,Numerical Analysis,,,,,,,,,,,,,,,,,,,,,,
9,Linear system of equations,2,,General,1100,,,1,1,"O(n^omega) where omega is the exponent on the complexity of matrix multiplication;
currently O(n^2.37285956)",(see matrix multiplication),(see matrix multiplication),[ Matrix inverse ()],Matrix inverse,,,,,,,,,"O(n^omega) where omega is the exponent on the complexity of matrix multiplication;
currently O(n^2.37285956)",,n: number of variables and number of equations,,,Word RAM,words,O(n^2),n: 5,equivalent to matrix multiplication,,,0,,0,,0,0,,0,0,,"a system of linear equations (or linear system) is a collection of one or
 more linear equations involving the same set of variables.",,,,,,,,,,,,,Numerical Analysis,,,,,,,,,,,,,,,,,,,,,,
9,Linear system of equations,1,,Toeplitz,1101,,,1,1,O(n*log^2(n)),,,[https://epubs.siam.org/doi/10.1137/040617200 Asymptotically fast Toeplitz algorithms (2008?)],Asymptotically fast Toeplitz algorithms,2008?,https://epubs.siam.org/doi/10.1137/040617200,,,,,,,O(n*log^2(n)),,n: number of variables and number of equations,,,Word RAM,words,O(n*log^2(n))?,n: 4,upper bound,,,0,,0,,0,0,,0,0,,"a system of linear equations (or linear system) is a collection of one or
 more linear equations involving the same set of variables.",,,,,,,,,,,,,Numerical Analysis,,,,,,,,,,,,,,,,,,,,,,
9,Linear system of equations,1,,Sparse,1102,,,1,1,"O(max(m^{(omega-2)/(omega-1)}*n^2, n^{(5*omega-4)/(omega+1)})*log^2(k/epsilon)) where omega is the exponent on the complexity of matrix multiplication;
currently O(n^2.331642)",,,"[https://arxiv.org/abs/2007.10254 Peng, Vempala (2020)]","Peng, Vempala",2020,https://arxiv.org/abs/2007.10254,,,,,,,"$O(max(m^{(omega-2)/(omega-1)}*n^2, n^{(5*omega-4)/(omega+1)})*log^2(k/epsilon))$ where omega is the exponent on the complexity of matrix multiplication;
currently $O(n^2.331642)$",,"n: number of variables and number of equations
m: number of nonzero entries in matrix
k: ratio between largest and smallest eigenvalues
epsilon: error requirement",,,Word RAM,words,,,,,,1,,1,,0,0,,0,0,,"a system of linear equations (or linear system) is a collection of one or
 more linear equations involving the same set of variables.",,,,,,,,,,,,,Numerical Analysis,,,,,,,,,,,,,,,,,,,,,,
10,Linear Programming,1,General Linear Programming,,1103,,,1,1,O(((m+n)n^2+(m+n)^1.5*n)L^2 logL loglogL),,,[https://link.springer.com/article/10.1007/BF01580859 Vaidya (1987)],Vaidya,1987,https://link.springer.com/article/10.1007/BF01580859,,,,,,,O(((m+n)n^2+(m+n)^1.5*n)L^2 logL loglogL),,"n: number of variables
m: number of constraints
L: length of input, in bits",,,Word RAM,words,O((nm+n^2)L)?,,can be easily derived?,,,0,,0,,0,0,,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) in a mathematical model whose requirements are represented by linear relationships. Linear programming is a special case of mathematical programming (also known as mathematical optimization).,,,,,,,,,,,,,Numerical Analysis,,,,,,,,,,,,,,,,,,,,,,
10,Linear Programming,1,General Linear Programming,,1104,,,1,1,O((m+n)^1.5*n*L^2 logL loglogL),,,[https://ieeexplore.ieee.org/document/63499 Vaidya (1989)],Vaidya,1989,https://ieeexplore.ieee.org/document/63499,,,,,,,O((m+n)^1.5*n*L^2 logL loglogL),,"n: number of variables
m: number of constraints
L: length of input, in bits",,,Word RAM,words,O((nm+n^2)L)?,,can be easily derived?,,,0,,0,,0,0,,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) in a mathematical model whose requirements are represented by linear relationships. Linear programming is a special case of mathematical programming (also known as mathematical optimization).,,,,,,,,,,,,,Numerical Analysis,,,,,,,,,,,,,,,,,,,,,,
10,Linear Programming,1,General Linear Programming,,1105,,,1,1,"O(n^(max(omega, 2.5-alpha/2, 37/18))*polylog(n, m, L)), where omega is the exponent on matrix multiplication, alpha is the dual exponent of matrix multiplication;
currently O(n^2.37285956)",,,"[https://arxiv.org/abs/1810.07896 Jiang, Song, Weinstein and Zhang (2020)]","Jiang, Song, Weinstein and Zhang",2020,https://arxiv.org/abs/1810.07896,,,,,,,"$O(n^(max(omega, 2.5-alpha/2, 37/18))*polylog(n, m, L))$, where omega is the exponent on matrix multiplication, alpha is the dual exponent of matrix multiplication;
currently $O(n^2.37285956)$",,"n: number of variables
m: number of constraints
L: length of input, in bits",,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) in a mathematical model whose requirements are represented by linear relationships. Linear programming is a special case of mathematical programming (also known as mathematical optimization).,,,,,,,,,,,,,Numerical Analysis,,,,,,,,,,,,,,,,,,,,,,
11,Line segment intersection,1,,Counting number of intersection points / line segments,1106,,,1,1,O(n^1.695),,,[https://www.sciencedirect.com/science/article/pii/0022000086900255 CHAZELLE 1986 (1986)],CHAZELLE 1986,1986,https://www.sciencedirect.com/science/article/pii/0022000086900255,,,,,,,O(n^1.695),,"n: number of line segments
k: number of points of intersection",,,Real RAM,words,O(n),n: 3,https://www.sciencedirect.com/science/article/pii/0022000086900255,,,0,,0,,0,0,,0,0,,"The line segment intersection problem supplies a list of line segments in the Euclidean plane and asks about the points where they intersect (cross), if any.",,,,,,,,,,,,,Image Processing,,,,,,,,,,,,,,,,,,,,,,
11,Line segment intersection,1,,Reporting all intersection points / general polygons,1107,,,1,1,O((n+k)log n),,,[https://pdfs.semanticscholar.org/a571/cc92218132a1b0e65c2adbf663c79d015737.pdf NIEVERGELT. J.. AND PREPARATA (Section 2) (1982)],NIEVERGELT. J.. AND PREPARATA (Section 2),1982,https://pdfs.semanticscholar.org/a571/cc92218132a1b0e65c2adbf663c79d015737.pdf,,,,,,,O((n+k)log n),,"n: number of line segments
k: number of points of intersection",,,Real RAM,words,O(n+k),"n: 3,
k: 3",https://courses.cs.duke.edu/cps234/spring04/papers/NP82.pdf,,,0,,0,,0,0,,0,0,,"The line segment intersection problem supplies a list of line segments in the Euclidean plane and asks about the points where they intersect (cross), if any.",,,,,,,,,,,,,Image Processing,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,,d-dimensional Convex Hull,1108,,,1,1,O(n^2+f_1*log(n)),,,[https://dl.acm.org/doi/pdf/10.1145/12130.12172 Seidel's Shelling Algorithm (1986)],Seidel's Shelling Algorithm,1986,https://dl.acm.org/doi/pdf/10.1145/12130.12172,,,,,,,O(n^2+f_1*log(n)),,"n: number of line segments
h: number of points on the convex hull
f_1: number of facets on the convex hull
f_2: number of subfacets on the convex hull",,,Real RAM,words,,,,,,0,,0,,0,0,,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,Image Processing,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,,d-dimensional Convex Hull,1109,,,1,1,O(n*f_1),,,"[https://dl.acm.org/doi/pdf/10.1145/321556.321564 Chand-Kapur, Gift Wrapping (1970)]","Chand-Kapur, Gift Wrapping",1970,https://dl.acm.org/doi/pdf/10.1145/321556.321564,,,,,,,O(n*f_1),,"n: number of line segments
h: number of points on the convex hull
f_1: number of facets on the convex hull
f_2: number of subfacets on the convex hull",,,Real RAM,words,,,,,,0,,0,,0,0,,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,Image Processing,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,,d-dimensional Convex Hull,1110,,,1,1,O(n*f(h)/h) where f(h) denotes the maximum number of facets with h vertices,,,[https://dl.acm.org/doi/pdf/10.1145/235815.235821 N-dimensional Quickhull (1996)],N-dimensional Quickhull,1996,https://dl.acm.org/doi/pdf/10.1145/235815.235821,,,,,,,O(n*f(h)/h) where f(h) denotes the maximum number of facets with h vertices,,"n: number of line segments
h: number of points on the convex hull
f_1: number of facets on the convex hull
f_2: number of subfacets on the convex hull",,,Real RAM,words,,,,,,0,,0,,0,0,,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,Image Processing,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,,"2-dimensional Convex Hull, Online",1111,,,,,"O(logn) per operation, O(n*log(n)) total",,,"[https://dl.acm.org/doi/abs/10.1145/359131.359132 Online 2-d Convex Hull, Preparata (1979)]","Online 2-d Convex Hull, Preparata",1979,https://dl.acm.org/doi/abs/10.1145/359131.359132,,,,,,,"O(logn) per operation, O(n*log(n)) total",,"n: number of line segments
h: number of points on the convex hull",,,Real RAM,words,O(n),n: 3,easily derived,,,0,,0,,0,0,,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,Image Processing,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,,"2-dimensional Convex Hull, Dynamic",1112,,,,,"O(log^2(n)) per operation, O(n*log^2(n)) total",,,"[https://www.sciencedirect.com/science/article/pii/002200008190012X?via%3Dihub Dynamic 2-d Convex Hull, Overmars and van Leeuwen (1980)]","Dynamic 2-d Convex Hull, Overmars and van Leeuwen",1980,https://www.sciencedirect.com/science/article/pii/002200008190012X?via%3Dihub,,,,,,,"O(log^2(n)) per operation, O(n*log^2(n)) total",,"n: number of line segments
h: number of points on the convex hull",,,Real RAM,words,,,,,,0,,0,,0,0,,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,Image Processing,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,0,,"2-dimensional Convex Hull, Dynamic",1113,,,,,,,,,(many more...),,,,,,,,,,,"n: number of line segments
h: number of points on the convex hull",,,Real RAM,words,,,,,,0,,0,,0,0,,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,Image Processing,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,SCCs,SCCs,1114,,,1,1,O(V+E),,,[https://www.semanticscholar.org/paper/Depth-First-Search-and-Linear-Graph-Algorithms-Tarjan/385742fffcf113656f0d3cf6c06ef95cb8439dc6 Geldenhuys-Valmari (2004)],Geldenhuys-Valmari,2004,https://www.semanticscholar.org/paper/Depth-First-Search-and-Linear-Graph-Algorithms-Tarjan/385742fffcf113656f0d3cf6c06ef95cb8439dc6,,,,,,,O(V+E),,"V: number of vertices
E: number of edges",,,Word RAM,words,O(V)?,V: 3,(follow-up from Tarjan's algorithm),,,0,,0,,0,1,,0,0,,"The strongly connected components or diconnected components of an arbitrary
 directed graph form a partition into subgraphs that are themselves
 strongly connected.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,SCCs,SCCs,1115,,,1,1,O(V^2+E),,,[https://ieeexplore.ieee.org/abstract/document/6877288 Multistep (2014)],Multistep,2014,https://ieeexplore.ieee.org/abstract/document/6877288,,,,,,,O(V^2+E),10,"V: number of vertices
E: number of edges
p: number of processors",,,Word RAM,words,O(V+E) total?,"V: 5,
E: 3",,,,0,,0,,0,0,,0,0,,"The strongly connected components or diconnected components of an arbitrary
 directed graph form a partition into subgraphs that are themselves
 strongly connected.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST",1116,,,1,1,O(ElogV),,,[ Prim's algorithm + binary heap (1964)],Prim's algorithm + binary heap,1964,,,,,0,0,,O(ElogV),11,"V: number of vertices
E: number of edges
U: maximum edge weight",,,Word RAM,words,O(V) auxiliary?,V: 3,can be easily derived,,,0,,0,,0,0,,0,0,,"A minimum spanning tree (MST) or minimum weight spanning tree is a subset
 of the edges of a connected; edge-weighted undirected graph that
 connects all the vertices together; without any cycles and
 with the minimum possible total edge weight.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST",1117,,,1,1,"O(E*beta(E, V)) where beta(m, n) = min(i such that log^(i)(n)≤m/n); this is also O(E (log-star)V)",,,[https://dl.acm.org/citation.cfm?id=28874 Fredman & Tarjan (1987)],Fredman & Tarjan,1987,https://dl.acm.org/citation.cfm?id=28874,,,,0,0,,"O(E*beta(E, V)) where beta(m, n) = min(i such that log^(i)(n)≤m/n); this is also O(E (log-star)V)",,"V: number of vertices
E: number of edges
U: maximum edge weight",,,Word RAM,words,O(E) auxiliary?,"V: 5,
E: 3",can be easily derived,,,0,,0,,0,0,,0,0,,"A minimum spanning tree (MST) or minimum weight spanning tree is a subset
 of the edges of a connected; edge-weighted undirected graph that
 connects all the vertices together; without any cycles and
 with the minimum possible total edge weight.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, Dense MST",1118,,,1,1,O(E),,,[https://epubs.siam.org/doi/abs/10.1137/0205051 Cheriton-Tarjan (dense) (1976)],Cheriton-Tarjan (dense),1976,https://epubs.siam.org/doi/abs/10.1137/0205051,,,,0,0,,O(E),10,"V: number of vertices
E: number of edges
U: maximum edge weight",,,Word RAM,words,O(E) auxiliary?,"V: 5,
E: 3",can be easily derived,,,0,,0,,0,0,,0,0,,"A minimum spanning tree (MST) or minimum weight spanning tree is a subset
 of the edges of a connected; edge-weighted undirected graph that
 connects all the vertices together; without any cycles and
 with the minimum possible total edge weight.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,"Undirected, Planar MST",1119,,,1,1,O(V),,,[https://epubs.siam.org/doi/abs/10.1137/0205051 Cheriton-Tarjan (planar) (1976)],Cheriton-Tarjan (planar),1976,https://epubs.siam.org/doi/abs/10.1137/0205051,,,,0,0,,O(V),-,"V: number of vertices
E: number of edges
U: maximum edge weight",,,Word RAM,words,O(V) auxiliary,V: 3,can be easily derived,,,0,,0,,0,0,,0,0,,"A minimum spanning tree (MST) or minimum weight spanning tree is a subset
 of the edges of a connected; edge-weighted undirected graph that
 connects all the vertices together; without any cycles and
 with the minimum possible total edge weight.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST",1120,,,1,1,"O(E*log(beta(E, V)))",,,"[https://link.springer.com/article/10.1007/BF02579168 Gabow et al, Section 2 (1986)]","Gabow et al, Section 2",1986,https://link.springer.com/article/10.1007/BF02579168,,,,0,0,,"O(E*log(beta(E, V)))",,"V: number of vertices
E: number of edges
U: maximum edge weight",,,Word RAM,words,O(E) auxiliary?,"V: 5,
E: 3",,,,0,,0,,0,0,,0,0,,"A minimum spanning tree (MST) or minimum weight spanning tree is a subset
 of the edges of a connected; edge-weighted undirected graph that
 connects all the vertices together; without any cycles and
 with the minimum possible total edge weight.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),2,MST,"Undirected, Integer Weights MST",1121,,,1,1,O(E+V),Any distribution (runtime is same regardless of input),need that much time to read all parts of input,[https://www.sciencedirect.com/science/article/pii/S0022000005800649?via%3Dihub Fredman & Willard (1991)],Fredman & Willard,1991,https://www.sciencedirect.com/science/article/pii/S0022000005800649?via%3Dihub,,,,0,0,,O(E+V),10,"V: number of vertices
E: number of edges
U: maximum edge weight",,,Trans-dichotomous,words,,,,,,0,,0,,0,0,,0,0,,"A minimum spanning tree (MST) or minimum weight spanning tree is a subset
 of the edges of a connected; edge-weighted undirected graph that
 connects all the vertices together; without any cycles and
 with the minimum possible total edge weight.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),2,MST,"Undirected, General MST",1122,,,1,1,O(E),"Randomly chosen from G_(n, m) or G_(n, p), and regardless of edge weights",https://dl.acm.org/doi/10.1145/505241.505243,"[https://dl.acm.org/doi/10.1145/505241.505243 Pettie, Ramachandran (2002)]","Pettie, Ramachandran",2002,https://dl.acm.org/doi/10.1145/505241.505243,,,,0,0,,unknown but optimal,,"V: number of vertices
E: number of edges
U: maximum edge weight",,,Word RAM?,words,O(E) auxiliary?,"V: 5,
E: 3",,,,0,,0,,0,0,,0,0,,"A minimum spanning tree (MST) or minimum weight spanning tree is a subset
 of the edges of a connected; edge-weighted undirected graph that
 connects all the vertices together; without any cycles and
 with the minimum possible total edge weight.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,"Directed (Optimum Branchings), General MST",1123,,,1,1,O(EV),,,[https://nvlpubs.nist.gov/nistpubs/jres/71b/jresv71bn4p233_a1b.pdf Chu-Liu-Edmonds Algorithm (1965)],Chu-Liu-Edmonds Algorithm,1965,https://nvlpubs.nist.gov/nistpubs/jres/71b/jresv71bn4p233_a1b.pdf,,,,0,0,,O(EV),16,"V: number of vertices
E: number of edges
U: maximum edge weight",,,Word RAM,words,O(E+V),"V: 5,
E: 3",(derived in sheet),,,0,,0,,0,0,,0,0,https://nvlpubs.nist.gov/nistpubs/jres/71B/jresv71Bn4p233_A1b.pdf,"A minimum spanning tree (MST) or minimum weight spanning tree is a subset
 of the edges of a connected; edge-weighted undirected graph that
 connects all the vertices together; without any cycles and
 with the minimum possible total edge weight.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),2,,"Directed (Optimum Branchings), General MST",1124,,,1,1,O(E+V(logV)^2),"""uniform probability measure""",https://onlinelibrary.wiley.com/doi/10.1002/net.3230070103,"[https://onlinelibrary.wiley.com/doi/10.1002/net.3230070103 Tarjan (directed, general) (1987)]","Tarjan (directed, general)",1987,https://onlinelibrary.wiley.com/doi/10.1002/net.3230070103,,,,0,0,,O(ElogV),11,"V: number of vertices
E: number of edges
U: maximum edge weight",,,Word RAM,words,O(E),"V: 5,
E: 3",https://onlinelibrary.wiley.com/doi/10.1002/net.3230070103,,,0,,0,,0,0,,0,0,,"A minimum spanning tree (MST) or minimum weight spanning tree is a subset
 of the edges of a connected; edge-weighted undirected graph that
 connects all the vertices together; without any cycles and
 with the minimum possible total edge weight.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,"Directed (Optimum Branchings), Super Dense MST",1125,,,1,1,O(V^2),,,"[https://onlinelibrary.wiley.com/doi/10.1002/net.3230070103 Tarjan (directed, dense) (1987)]","Tarjan (directed, dense)",1987,https://onlinelibrary.wiley.com/doi/10.1002/net.3230070103,,,,0,0,,O(V^2),10,"V: number of vertices
E: number of edges
U: maximum edge weight",,,Word RAM,words,O(E),"V: 5,
E: 3",https://onlinelibrary.wiley.com/doi/10.1002/net.3230070103,,,0,,0,,0,0,,0,0,,"A minimum spanning tree (MST) or minimum weight spanning tree is a subset
 of the edges of a connected; edge-weighted undirected graph that
 connects all the vertices together; without any cycles and
 with the minimum possible total edge weight.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,"Directed (Optimum Branchings), General MST",1126,,,1,1,O(VlogV+Eloglog(logV/log(E/V + 2))),,,"[https://ieeexplore.ieee.org/abstract/document/715935 Gabow, Galil, Spencer (1984)]","Gabow, Galil, Spencer",1984,https://ieeexplore.ieee.org/abstract/document/715935,,,,0,0,,O(VlogV+Eloglog(logV/log(E/V + 2))),10,"V: number of vertices
E: number of edges
U: maximum edge weight",,,Word RAM,words,O(E),"V: 5,
E: 3",(derived in sheet),,,0,,0,,0,0,,0,0,,"A minimum spanning tree (MST) or minimum weight spanning tree is a subset
 of the edges of a connected; edge-weighted undirected graph that
 connects all the vertices together; without any cycles and
 with the minimum possible total edge weight.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,"Directed (Optimum Branchings), General MST",1127,,,1,1,O(E+VlogV),,,"[https://link.springer.com/article/10.1007/BF02579168 Gabow et al, Section 3 (1986)]","Gabow et al, Section 3",1986,https://link.springer.com/article/10.1007/BF02579168,,,,0,0,,O(E+VlogV),10,"V: number of vertices
E: number of edges
U: maximum edge weight",,,Word RAM,words,O(E+V),"V: 5,
E: 3",(derived in sheet),,,0,,0,,0,0,,0,0,,"A minimum spanning tree (MST) or minimum weight spanning tree is a subset
 of the edges of a connected; edge-weighted undirected graph that
 connects all the vertices together; without any cycles and
 with the minimum possible total edge weight.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,1,,"k-dimensional space, Euclidean metric",1128,,,1,1,O(3^k*n),Randomness within the algorithm steps themselves,,"[https://www.sciencedirect.com/science/article/pii/S0890540185710498?via%3Dihub Khuller, Matias (1995)]","Khuller, Matias",1995,https://www.sciencedirect.com/science/article/pii/S0890540185710498?via%3Dihub,,,,,,,infinite (can be upper bounded by O(n^2)),,"n: number of points
k: dimension of space",,,Real RAM,words,O(n),n: 3,https://www.sciencedirect.com/science/article/pii/S0890540185710498?via%3Dihub,,,1,Las Vegas,0,,0,0,,0,0,,"given n points in metric space; find a pair of points with the smallest
 distance between them. ",,,,,,,,,,,,,Image Processing,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed graphs),1,directed nonneg SSSP,nonnegative integer weights,1129,,,1,1,O(E+LV),,,[https://dl.acm.org/doi/10.1145/363269.363610 Dial's Algorithm (1969)],Dial's Algorithm,1969,https://dl.acm.org/doi/10.1145/363269.363610,,,,,,,O(E+LV),,"V: number of vertices
E: number of edges
L: maximum absolute value of edge cost",,,Word RAM,words,O(V+L),"V: 3,
L: 3",keep track of vertices and L most recent buckets,,,0,,0,,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices
 (or nodes) in a graph such that the sum of the weights of its constituent edges is minimized.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,Shortest Path (Undirected graphs),1,,positive integer weights; assumes constant-time multiplication,1130,,,1,1,O(E),,,[https://dl.acm.org/doi/10.1145/316542.316548 Thorup (1999)],Thorup,1999,https://dl.acm.org/doi/10.1145/316542.316548,,,,,,,O(E),,"V: number of vertices
E: number of edges
L: maximum absolute value of edge cost",,,Word RAM,words,O(E),"V: 5,
E: 3",https://dl.acm.org/doi/10.1145/316542.316548,,,0,,0,,0,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices
 (or nodes) in a graph such that the sum of the weights of its constituent edges is minimized.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,Betweenness Centrality (BC),1,,Unweighted,1131,,,1,1,O(nm),,,[https://www.tandfonline.com/doi/abs/10.1080/0022250x.2001.9990249 Brandes (2000)],Brandes,2000,https://www.tandfonline.com/doi/abs/10.1080/0022250x.2001.9990249,,,,,,,O(nm),,"n: number of vertices
m: number of edges",,,not mentioned,,O(n + m),"n: 5,
m: 3",https://www.tandfonline.com/doi/abs/10.1080/0022250x.2001.9990249,,,0,,0,,0,0,,0,0,,"compute the betweenness centrality of a vertex, i.e. the proportion of shortest paths in the graph that go through a specific vertex",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,Betweenness Centrality (BC),1,,Weighted,1132,,,1,1,O(nm + n^2 \log n),,,[https://www.tandfonline.com/doi/abs/10.1080/0022250x.2001.9990249 Brandes (2000)],Brandes,2000,https://www.tandfonline.com/doi/abs/10.1080/0022250x.2001.9990249,,,,,,,O(nm + n^2 \log n),,"n: number of vertices
m: number of edges",,,not mentioned,,O(n + m),"n: 5,
m: 3",https://www.tandfonline.com/doi/abs/10.1080/0022250x.2001.9990249,,,0,,0,,0,0,,0,0,,"compute the betweenness centrality of a vertex, i.e. the proportion of shortest paths in the graph that go through a specific vertex",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,All-Pairs Shortest Paths (APSP),1,,"Directed, Weighted (Arbitrary weights)",1133,,,1,1,O(V^2 logV +VE),,,[https://dl.acm.org/doi/10.1145/321992.321993 Johnson's algorithm (1977)],Johnson's algorithm,1977,https://dl.acm.org/doi/10.1145/321992.321993,,,,,,,O(V^2 log V + VE),16,"V: number of vertices
E: number of edges",,,,,,,,,,,,,,,,,,,,"the shortest path problem is the problem of finding a path between two vertices
 (or nodes) in a graph such that the sum of the weights of its constituent edges is minimized.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,All-Pairs Shortest Paths (APSP),1,,"Directed, Unweighted",1134,,,1,1,O(V^2.575),,,[https://dl.acm.org/doi/abs/10.1145/567112.567114 Zwick 2002 (2002)],Zwick 2002,2002,https://dl.acm.org/doi/abs/10.1145/567112.567114,,,,,,,O(V^2.575),,V: number of vertices,,,,,,,,,,0,,0,,1,0,,0,0,,"the shortest path problem is the problem of finding a path between two vertices
 (or nodes) in a graph such that the sum of the weights of its constituent edges is minimized.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,Boolean Satisfiability,2,,CNF-SAT,1135,,,1,1,2^{nw + o(n)},Random 3-SAT distribution,https://arxiv.org/abs/cs/0506069,[https://dl.acm.org/doi/10.1145/368273.368557 Davis-Putnam-Logemann-Loveland Algorithm (DPLL) (1961)],Davis-Putnam-Logemann-Loveland Algorithm (DPLL),1961,https://dl.acm.org/doi/10.1145/368273.368557,,,,,,,O(2^n),,"n: number of variables
w: ratio of clauses per variable",,,,Binary Search Tree,O(n),n: 3,https://en.wikipedia.org/wiki/DPLL_algorithm,,,0,,0,,1,0,,0,0,,"CNF-SAT restricts the boolean formula to conjunctive normal form (CNF), meaning it is the AND of ORs.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Boolean Satisfiability,1,,CNF-SAT,1136,,,1,1,O(2^n),,,[https://ieeexplore.ieee.org/document/769433 Conflict-Driven Clause Learning (CDCL) (1999)],Conflict-Driven Clause Learning (CDCL),1999,https://ieeexplore.ieee.org/document/769433,,,,,,,O(2^n),,n: number of variables,,,,,,,,,,0,,0,,1,0,,0,0,,"CNF-SAT restricts the boolean formula to conjunctive normal form (CNF), meaning it is the AND of ORs.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Boolean Satisfiability,2,,CNF-SAT,1137,,,1,1,O(n*mt*mf),,,[http://www.cs.cornell.edu/selman/papers/pdf/92.aaai.gsat.pdf GSAT (1992)],GSAT,1992,http://www.cs.cornell.edu/selman/papers/pdf/92.aaai.gsat.pdf,,,,,,,O(n*mt*mf),,"n: number of variables, mt: maximum assignments tested, mf: maximum flips per assignment",,,,,O(n),n: 3,derived in notes,,,1,,,,1,0,,0,0,,"CNF-SAT restricts the boolean formula to conjunctive normal form (CNF), meaning it is the AND of ORs.",,,,,,,,,,,"Incomplete algorithm, can give wrong answers in yes instances. If run exponentially long time, it gives right answers with high probability.",,,,,,,,,,,,,,,,,,,,,,,,
,Boolean Satisfiability,2,,CNF-SAT,1138,,,1,1,O(n*mt*mf),,,[https://www.aaai.org/Papers/AAAI/1994/AAAI94-051.pdf WalkSAT (1994)],WalkSAT,1994,https://www.aaai.org/Papers/AAAI/1994/AAAI94-051.pdf,,,,,,,O(n*mt*mf),,"n: number of variables, mt: maximum assignments tested, mf: maximum flips per assignment",,,,,O(n),n: 3,same as above,,,1,,,,1,0,,0,0,,"CNF-SAT restricts the boolean formula to conjunctive normal form (CNF), meaning it is the AND of ORs.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Boolean Satisfiability,1,,CNF-SAT,1139,,,1,1,O(2^n),,,[https://arxiv.org/pdf/quant-ph/0001106.pdf Quantum Adiabatic Algorithm (QAA) (2001)],Quantum Adiabatic Algorithm (QAA),2001,https://arxiv.org/pdf/quant-ph/0001106.pdf,,,,,,,O(2^n),,n: number of variables (number of qubits),,,Quantum Adiabatic Computing,qubits,O(poly(n)),n: 7,,,,,,,,,0,,1,0,,"CNF-SAT restricts the boolean formula to conjunctive normal form (CNF), meaning it is the AND of ORs.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Boolean Satisfiability,2,,Renamable Horn,1140,,,1,1,O(mn^2),,,[https://dl.acm.org/doi/10.1145/322047.322059 Lewis 1978 (1978)],Lewis 1978,1978,https://dl.acm.org/doi/10.1145/322047.322059,,,,,,,O(mn^2),,"n: number of variables
m: number of clauses",,,,,,,,,,0,,0,,0,0,,0,0,https://en.wikipedia.org/wiki/Horn-satisfiability,Renamable Horn asks the question whether or not there exists a subset of variables that can be negated such that the boolean formula is turned into a Horn formula,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Boolean Satisfiability,1,,k-SAT,1141,,,1,1,O^*(2^{n-cn/k}),,,"[https://dl.acm.org/doi/abs/10.1145/1066100.1066101 Paturi, Pudlák, Saks, Zane (PPSZ) 2005 (2005)]","Paturi, Pudlák, Saks, Zane (PPSZ) 2005",2005,https://dl.acm.org/doi/abs/10.1145/1066100.1066101,,,,,,,$O^*(2^{n-cn/k})$,,"n: number of clauses
k: number of variables per clause ",,,Word RAM,words,O(kn),"n: 3,
k: 3",Derived in notes,,,1,Monte Carlo,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Boolean Satisfiability,1,,3SAT,1142,,,1,1,,,,[https://epubs.siam.org/doi/abs/10.1137/120868177 Hertli (Modified PPSZ) (2014)],Hertli (Modified PPSZ),2014,https://epubs.siam.org/doi/abs/10.1137/120868177,,,,,,,O(1.30704^n),,n: number of variables,,,Word RAM,words,O(kn),"n: 3,
k: 3","Not sure, please look",,,1,Monte Carlo,0,,0,0,,0,0,Original PPSZ: https://dl.acm.org/doi/abs/10.1145/1066100.1066101,3SAT restricts the boolean formula to CNF with (at most) 3 literals per clause,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Boolean Satisfiability,1,,4SAT,1143,,,1,1,,,,[https://epubs.siam.org/doi/abs/10.1137/120868177 Hertli (Modified PPSZ) (2014)],Hertli (Modified PPSZ),2014,https://epubs.siam.org/doi/abs/10.1137/120868177,,,,,,,O(1.46899^n),,n: number of variables,,,Word RAM,words,O(kn),"n: 3,
k: 3","Not sure, please look",,,1,Monte Carlo,0,,0,0,,0,0,Original PPSZ: https://dl.acm.org/doi/abs/10.1145/1066100.1066101,4SAT restricts the boolean formula to CNF with (at most) 4 literals per clause,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Boolean Satisfiability,2,,NAE 3SAT,1144,,,1,1,,,,[https://ieeexplore.ieee.org/abstract/document/5211463 Shi 2009 (2009)],Shi 2009,2009,https://ieeexplore.ieee.org/abstract/document/5211463,,,,,,,O(12m*t_{extract} + 2m*t_{discard} + 2n*t_{append} + (n+2m)*t_{merge} + (n-1)*t_{amplify}),,"n: number of variables
m: number of clauses",,,Adelman-Lipton,,O(n) tubes or O(2^n) library strands,,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=5211463,,,0,,0,,,,,,,,,,,,,,,,,,,DNA-Based,,,,,,,,,,,,,,,,,,,,,,,,
21,Informed Search,2,,,1145,,,1,1,O(b^d),,,[https://www.ri.cmu.edu/publications/anytime-dynamic-a-an-anytime-replanning-algorithm/ Anytime Dynamic A* (ADA*) (2005)],Anytime Dynamic A* (ADA*),2005,https://www.ri.cmu.edu/publications/anytime-dynamic-a-an-anytime-replanning-algorithm/,,,,,,,O(b^d),,"b: branching factor (the average number of successors per state)
d: the depth of the solution (the shortest path)",,,,,O(b^d),"b: 7,
d: 8",Stores all generated nodes in memory,,,0,,0,,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
21,Informed Search,2,,,1146,,,1,1,O(b^d),,,[https://doi.org/10.1109%2Ftro.2004.838026 D* Lite (2005)],D* Lite,2005,https://doi.org/10.1109%2Ftro.2004.838026,,,,,,,O(b^d),,"b: branching factor (the average number of successors per state)
d: the depth of the solution (the shortest path)",,,,,O(b^d),"b: 7,
d: 8",Stores all generated nodes in memory,,,0,,0,,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
21,Informed Search,2,,,1147,,,1,1,O(b^d),,,[https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.41.8257 Focused D* (2005)],Focused D*,2005,https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.41.8257,,,,,,,O(b^d),,"b: branching factor (the average number of successors per state)
d: the depth of the solution (the shortest path)",,,,,O(b^d),"b: 7,
d: 8",Stores all generated nodes in memory,,,0,,0,,1,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,,,1148,,,1,0,O(nk \lceil m/w \rceil),,,"[https://dl.acm.org/doi/pdf/10.1145/135239.135244 Wu and Manber, Fuzzy String Matching (1992)]","Wu and Manber, Fuzzy String Matching",1992,https://dl.acm.org/doi/pdf/10.1145/135239.135244,,,,,,,O(nk \lceil m/w \rceil),,"m: pattern length
n: text length
k: allowable errors
w: word size
s: alphabet size",,,not mentioned,,O(ms +  k \lceil m/w \rceil),"m: 3,
s: 3,
k: 3,
n: 3",https://dl.acm.org/doi/pdf/10.1145/135239.135244,,,0,,1,Levensthein Distance = k,0,0,,0,0,,"try to find a place where one or several strings (also called patterns) are
 found within a larger string or text.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
23,Sequence Alignment,1,"Edit Distance, constant-size alphabet",Edit distance,1149,,,1,1,O(mn),,,[https://dl.acm.org/doi/abs/10.1145/321796.321811 Wagner-Fischer algorithm (1974)],Wagner-Fischer algorithm,1974,https://dl.acm.org/doi/abs/10.1145/321796.321811,,,,,,,O(mn),20,"n, m: lengths of input strings; assume n≥m",,,Word RAM,words,O(m),"n: 3,
m: 3",Easily derived,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Bioinformatics,,,,,,,,,,,,,,,,,,,,,,
23,Sequence Alignment,1,,Edit sequence,1150,,,1,1,O(mn),,,[https://dl.acm.org/doi/abs/10.1145/321796.321811 Wagner-Fischer algorithm (1974)],Wagner-Fischer algorithm,1974,https://dl.acm.org/doi/abs/10.1145/321796.321811,,,,,,,O(mn),,"n, m: lengths of input strings; assume n≥m",,,Word RAM,words,O(mn),"n: 5,
m: 3",https://dl.acm.org/doi/10.1145/360825.360861,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Bioinformatics,,,,,,,,,,,,,,,,,,,,,,
23,Sequence Alignment,1,,Edit sequence,1151,,,1,1,O(mn/log(n)),,,"[https://www.sciencedirect.com/science/article/pii/0022000080900021?via%3Dihub Masek, Paterson (1980)]","Masek, Paterson",1980,https://www.sciencedirect.com/science/article/pii/0022000080900021?via%3Dihub,,,,,,,O(mn/log(n)),,"n, m: lengths of input strings; assume n≥m",,,Word RAM,words,O(mn/log(n)),"n: 5,
m: 3",https://www.sciencedirect.com/science/article/pii/0022000080900021?via%3Dihub,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Bioinformatics,,,,,,,,,,,,,,,,,,,,,,
28,Maximum cardinality matching,1,,bipartite graph,1152,,,1,1,O(V^1.5*(E/logV)^0.5),,,"[https://www.sciencedirect.com/science/article/pii/002001909190195N Alt, Blum, Mehlhorn, Paul (1991)]","Alt, Blum, Mehlhorn, Paul",1991,https://www.sciencedirect.com/science/article/pii/002001909190195N,,,,,,,O(V^1.5*(E/logV)^0.5),,"V: number of vertices
E: number of edges",,,Word RAM,words,O(E) auxiliary?,"V: 5,
E: 3",Uses constant number of O(E)-sized data structures in pseudocode of algorithm,,,,,,,,,,,,,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
28,Maximum cardinality matching,1,,general graph,1153,,,1,1,O(V^2E),,,[https://www.cambridge.org/core/journals/canadian-journal-of-mathematics/article/paths-trees-and-flowers/08B492B72322C4130AE800C0610E0E21 Blossom Algorithm (1961)],Blossom Algorithm,1961,https://www.cambridge.org/core/journals/canadian-journal-of-mathematics/article/paths-trees-and-flowers/08B492B72322C4130AE800C0610E0E21,,,,,,,O(V^2E),,"V: number of vertices
E: number of edges",,,Word RAM,words,O(E) auxiliary?,"V: 5,
E: 3",Manipulates a constant number of graphs? Contractions can be kept track of in O(E) space,,,,,,,,,,,,,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
28,Maximum cardinality matching,1,,general graph,1154,,,1,1,O(V^0.5 E),,,"[https://ieeexplore.ieee.org/document/4567800 Micali, Vazirani (1980)]","Micali, Vazirani",1980,https://ieeexplore.ieee.org/document/4567800,,,,,,,O(V^0.5 E),,"V: number of vertices
E: number of edges",,,Word RAM,words,O(E) auxiliary?,"V: 5,
E: 3",Manipulates a constant number of graphs? Contractions can be kept track of in O(E) space,,,,,,,,,,,,,"the goal is to find a matching with as many edges as possible
 (equivalently: a matching that covers as many vertices as possible).",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
36,Minimum value in each row of an implicitly-defined totally monotone matrix,1,,,1155,,,1,1,O(m*log(n)),,,[https://link.springer.com/article/10.1007/BF01840359 Divide and Conquer (1987)],Divide and Conquer,1987,https://link.springer.com/article/10.1007/BF01840359,,,,,,,O(m*log(n)),,"n, m: dimensions of matrix; assume m≥n
possibly uses a function f to define entries; assume evaluation of f takes time O(1)",,,Word RAM,words,O(log(n)) auxiliary?,n: 2,"Need to keep track of the specific indices where the minimums occur, up to depth log(n)",,,0,,0,,0,0,,0,0,,,,,,1000,250,1000000,0,1000000000,0,4,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
37,All permutations,2,,,1156,,,1,1,O(1) per permutation,averaged over all permutations,Easily derived (each permutation takes O(1) time) ,[https://www.jstor.org/stable/2004229#metadata_info_tab_contents Wells (1961)],Wells,1961,https://www.jstor.org/stable/2004229#metadata_info_tab_contents,,,,,,,O(1) per permutation,,n: number of elements,,,Word RAM,words,O(n) auxiliary,n: 3,O(n)-sized array for t_k's necessary,,,0,,0,,0,0,,0,0,,All permutations of an input string.,,,,,,,,,,,,,Numerical Analysis,,,,,,,,,,,,,,,,,,,,,,
37,All permutations,2,,,1157,,,1,1,O(n) per permutation?,averaged over all permutations,Easily derived (most iterations are full rotations),[https://dl.acm.org/doi/pdf/10.1145/363282.363315 Langdon (1967)],Langdon,1967,https://dl.acm.org/doi/pdf/10.1145/363282.363315,,,,,,,O(n) per permutation,,n: number of elements,,,Word RAM,words,O(1) auxiliary,n: 1,"Only need the auxiliary variable N, according to the flowchart in the paper",,,0,,0,,0,0,,0,0,,All permutations of an input string.,,,,,,,,,,,,,Numerical Analysis,,,,,,,,,,,,,,,,,,,,,,
37,All permutations,2,,,1158,,,1,1,O(1) per permutation,averaged over all permutations,Easily derived (each permutation takes O(1) time) ,[https://dl.acm.org/doi/pdf/10.1145/362896.362913 Ord-Smith (1967)],Ord-Smith,1967,https://dl.acm.org/doi/pdf/10.1145/362896.362913,,,,,,,O(1) per permutation,,n: number of elements,,,Word RAM,words,O(n) auxiliary,n: 3,O(n)-sized array q (as in paper) necessary,,,0,,0,,0,0,,0,0,,All permutations of an input string.,,,,,,,,,,,,,Numerical Analysis,,,,,,,,,,,,,,,,,,,,,,
37,All permutations,2,,,1159,,,1,1,O(1) per permutation,averaged over all permutations,Easily derived (each permutation takes O(1) time) ,[https://dl.acm.org/doi/abs/10.1145/359997.360002 Ives' algorithm c (1976)],Ives' algorithm c,1976,https://dl.acm.org/doi/abs/10.1145/359997.360002,,,,,,,O(1) per permutation,,n: number of elements,,,Word RAM,words,O(n) auxiliary,n: 3,O(n) words needed to keep track of which elements have cycled how many times,,,0,,0,,0,0,,0,0,,All permutations of an input string.,,,,,,,,,,,,,Numerical Analysis,,,,,,,,,,,,,,,,,,,,,,
37,All permutations,2,,,1160,,,1,1,amortized O(1) per permutation,averaged over all permutations,https://link.springer.com/article/10.1007/BF01937486,[https://link.springer.com/article/10.1007/BF01937486 Zaks' prefix reversal algorithm (1984)],Zaks' prefix reversal algorithm,1984,https://link.springer.com/article/10.1007/BF01937486,,,,,,,O(n) on specific permutations,,n: number of elements,,,Word RAM,words,O(n) auxiliary (see NEXT algorithm in same paper),n: 3,https://link.springer.com/content/pdf/10.1007/BF01937486.pdf,,,0,,0,,0,0,,0,0,,All permutations of an input string.,,,,,,,,,,,,,Numerical Analysis,,,,,,,,,,,,,,,,,,,,,,
40,Maximum-weight matching,1,,"bipartite (i.e. assignment), general",1161,,,1,1,O(n*(SP+)) where (SP+) denotes the time for one SSSP computation on a nonnegatively weighted graph. Initially O(n^3),,,[https://dl.acm.org/doi/10.1145/321694.321699 Edmonds-Karp (1972)],Edmonds-Karp,1972,https://dl.acm.org/doi/10.1145/321694.321699,,,,,,,$O(n*(SP+))$ where $(SP+)$ denotes the time for one SSSP computation on a nonnegatively weighted graph. Initially $O(n^3)$,,n: number of vertices,,,Word RAM,words,O(n^2),n: 5,"Keeps track of current flow, which is of size O(n^2), and an O(n)-sized labeling function. SSSP computation has time bounded by O(n^2) and thus should use O(n^2) space at most",,,0,,0,,0,0,,0,0,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
40,Maximum-weight matching,1,,"bipartite (i.e. assignment), general",1162,,,1,1,O(mn*log(n)/log(2+m/n)),,,[https://www.sciencedirect.com/science/article/pii/0020019075900010 Johnson (Edmonds-Karp-based) (1975)],Johnson (Edmonds-Karp-based),1975,https://www.sciencedirect.com/science/article/pii/0020019075900010,,,,,,,O(mn*log(n)/log(2+m/n)),,n: number of vertices,,,Word RAM,words,O(n^2),n: 5,^see above,,,0,,0,,0,0,,0,0,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
40,Maximum-weight matching,1,,"bipartite (i.e. assignment), general",1163,,,1,1,O(mn+n^2log(n)),,,[https://dl.acm.org/doi/10.1145/28869.28874 Fredman-Tarjan (Edmonds-Karp-based) (1984)],Fredman-Tarjan (Edmonds-Karp-based),1984,https://dl.acm.org/doi/10.1145/28869.28874,,,,,,,O(mn+n^2log(n)),,n: number of vertices,,,Word RAM,words,O(n^2),n: 5,^see above,,,0,,0,,0,0,,0,0,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
40,Maximum-weight matching,1,,general,1164,,,1,1,O(n^3),,,[https://www.proquest.com/docview/287948024?pq-origsite=gscholar&fromopenview=true Gabow (1974)],Gabow,1974,https://www.proquest.com/docview/287948024?pq-origsite=gscholar&fromopenview=true,,,,,,,O(n^3),,"n: number of vertices
m: number of edges",,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
40,Maximum-weight matching,1,,general,1165,,,1,1,O(mn*log(n)),,,"[https://www.proquest.com/docview/919855909?pq-origsite=gscholar&fromopenview=true Galil, Micali, Gabow (1982)]","Galil, Micali, Gabow",1982,https://www.proquest.com/docview/919855909?pq-origsite=gscholar&fromopenview=true,,,,,,,O(mn*log(n)),,"n: number of vertices
m: number of edges",,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
40,Maximum-weight matching,1,,general,1166,,,1,1,O(mn*log(log(log(n)/log(2+m/n))) + n^2*log(n)),,,"[https://ieeexplore.ieee.org/abstract/document/715935 Gabow, Galil, Spencer (1989)]","Gabow, Galil, Spencer",1989,https://ieeexplore.ieee.org/abstract/document/715935,,,,,,,O(mn*log(log(log(n)/log(2+m/n))) + n^2*log(n)),,"n: number of vertices
m: number of edges",,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
40,Maximum-weight matching,1,,general,1167,,,1,1,O(mn+n^2log(n)),,,[https://dl.acm.org/doi/10.5555/320176.320229 Gabow (1990)],Gabow,1990,https://dl.acm.org/doi/10.5555/320176.320229,,,,,,,O(mn+n^2log(n)),,"n: number of vertices
m: number of edges",,,Word RAM,words,O(m),"n: 5,
m: 3",https://dl.acm.org/doi/10.5555/320176.320229,,,0,,0,,0,0,,0,0,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,1,General Root Computation,General Root Computation,1168,,0,1,1,(order of convergence ~ 1.442),,,[https://link.springer.com/article/10.1007/BF01934364 Illinois Algorithm (1971)],Illinois Algorithm,1971,https://link.springer.com/article/10.1007/BF01934364,,,,,,,O(n_max),,"epsilon: (additive) tolerance error
a, b: endpoint values, with b>a
n_max: maximum number of iterations",,,Word/Real RAM,words,O(1),,"Store current endpoint values; iterations take O(1) time and thus O(1) space, and space can be re-used across iterations",,,0,,1,"epsilon, additive",0,0,,0,0,https://en.wikipedia.org/wiki/Regula_falsi,,,,,,,,,,,6,,,Numerical Analysis,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,1,General Root Computation,General Root Computation,1169,,0,1,1,?,,,[https://link.springer.com/article/10.1007/BF01951936 Anderson–Björck algorithm (1973)],Anderson–Björck algorithm,1973,https://link.springer.com/article/10.1007/BF01951936,,,,,,,O(n_max),,"epsilon: (additive) tolerance error
a, b: endpoint values, with b>a
n_max: maximum number of iterations",,,Word/Real RAM,words,O(1),,"Store current endpoint values; iterations take O(1) time and thus O(1) space, and space can be re-used across iterations",,,0,,1,"epsilon, additive",0,0,,0,0,https://en.wikipedia.org/wiki/Regula_falsi,,,,,,,,,,,6,,,Numerical Analysis,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,1,General Root Computation,General Root Computation,1170,,0,1,1,(order of convergence = sqrt(k_2) under certain conditions),,,[- ITP Method (1940?)],ITP Method,1940?,-,,,,,,,O(n_0+log((b-a)/epsilon)),,"epsilon: (additive) tolerance error
a, b: endpoint values, with b>a
k_1, k_2: truncation parameters; requires k_1>0 and k_2 in [1, 1+phi)
n_0: projection parameter; requires n_0 >= 0",,,Word/Real RAM,words,O(1),,"Store current endpoint values; iterations take O(1) time and thus O(1) space, and space can be re-used across iterations",,,0,,1,"epsilon, additive",0,0,,0,0,https://en.wikipedia.org/wiki/ITP_method,,,,,,,,,,,6,,,Numerical Analysis,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,1,,Root Computation with continuous derivatives (up to d),1171,,0,1,1,(order of convergence = d+1),,,[- Householder's Method (1940(?))],Householder's Method,1940(?),-,,,,0,0,,O(d*n_max)?,,"epsilon: (additive) tolerance error
d: number of derivatives being used
n_max: maximum number of iterations",,,Word/Real RAM,words,O(d),,"Store current estimate x_i and the derivatives f' through f^{(d)} (assuming these take O(1) space each); iterations take O(1) time and thus O(1) space, and space can be re-used across iterations",,,0,,1,"epsilon, additive",0,0,,0,0,https://en.wikipedia.org/wiki/Halley%27s_method,,,,,1000,,,,,,6,,,Numerical Analysis,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,1,General Root Computation,General Root Computation,1172,,0,1,1,"(order of convergence = 2, but under very specific conditions)",,,[ Steffensen's method (1940(?))],Steffensen's method,1940(?),,,,,0,0,,O(n_max),,"epsilon: (additive) tolerance error
n_max: maximum number of iterations",,,Word/Real RAM,words,O(1),,"Store previous estimate x_i; iterations take O(1) time and thus O(1) space, and space can be re-used across iterations",,,0,,1,"epsilon, additive",0,0,,0,0,https://en.wikipedia.org/wiki/Steffensen%27s_method,,,,,1000000,,,,,,6,,,Numerical Analysis,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,1,General Root Computation,General Root Computation,1173,,0,1,1,(order of convergence ~ 1.84),,,[ Inverse quadratic interpolation (1940(?))],Inverse quadratic interpolation,1940(?),,,,,0,0,,O(n_max),,"epsilon: (additive) tolerance error
n_max: maximum number of iterations",,,Word/Real RAM,words,O(1),,"Store previous 3 estimates x_i, x_{i-1}, and x_{i-2} along with function values f_i, f_{i-1}, f_{i-2}; iterations take O(1) time and thus O(1) space, and space can be re-used across iterations",,,0,,1,"epsilon, additive",0,0,,0,0,https://en.wikipedia.org/wiki/Inverse_quadratic_interpolation,,,,,1000000,,,,,,6,,,Numerical Analysis,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,1,General Root Computation,General Root Computation,1174,,0,1,1,,,,[https://books.google.com/books?vid=ISBN0130223352 Brent-Dekker Method (1973)],Brent-Dekker Method,1973,https://books.google.com/books?vid=ISBN0130223352,,,,0,0,,O(n_max),,"epsilon: (additive) tolerance error
n_max: maximum number of iterations",,,Word/Real RAM,words,O(1),,"Store previous 3 estimates x_i, x_{i-1}, and x_{i-2} along with function values f_i, f_{i-1}, f_{i-2}; iterations take O(1) time and thus O(1) space, and space can be re-used across iterations",,,0,,1,"epsilon, additive",0,0,,0,0,https://en.wikipedia.org/wiki/Brent%27s_method,,,,,1000000,,,,,,6,,,Numerical Analysis,,,,,,,,,,,,,,,,,,,,,,
58,Lowest Common Ancestor,1,Lowest Common Ancestor,Off-Line Lowest Common Ancestor,1175,,,1,1,"O(n+ m*alpha(m + n, n)) where alpha is the inverse Ackermann function",,,"[https://dl.acm.org/doi/pdf/10.1145/800125.804056 Aho, Hopcroft, and Ullman [Offline] (1976)]","Aho, Hopcroft, and Ullman [Offline]",1976,https://dl.acm.org/doi/pdf/10.1145/800125.804056,,,,,,,"O(n+ m*alpha(m + n, n)) where alpha is the inverse Ackermann function",,"n: number of vertices
m: number of total number of operations (queries, links, and cuts)",,,Word RAM,words,O(n),n: 3,https://www.cs.bgu.ac.il/~segal/PAPERS2/tarj.pdf,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
58,Lowest Common Ancestor,1,Lowest Common Ancestor,Lowest Common Ancestor with Static Trees,1176,,,1,1,O((m+n)*log(log(n))),,,"[https://dl.acm.org/doi/pdf/10.1145/800125.804056 Aho, Hopcroft, and Ullman [Static Trees] (1976)]","Aho, Hopcroft, and Ullman [Static Trees]",1976,https://dl.acm.org/doi/pdf/10.1145/800125.804056,,,,,,,O((m+n)*log(log(n))),,"n: number of vertices
m: number of total number of operations (queries, links, and cuts)",,,Word RAM,words,O(n*log(log(n))),n: 4,https://www.cs.bgu.ac.il/~segal/PAPERS2/tarj.pdf,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
58,Lowest Common Ancestor,1,,Lowest Common Ancestor with Linking,1177,,,1,1,O((m+n)*log(n)),,,"[https://dl.acm.org/doi/pdf/10.1145/800125.804056 Aho, Hopcroft, and Ullman [Linking] (1976)]","Aho, Hopcroft, and Ullman [Linking]",1976,https://dl.acm.org/doi/pdf/10.1145/800125.804056,,,,,,,O((m+n)*log(n)),,"n: number of vertices
m: number of total number of operations (queries, links, and cuts)",,,Word RAM,words,O(n*log(n)),n: 4,https://www.cs.bgu.ac.il/~segal/PAPERS2/tarj.pdf,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
58,Lowest Common Ancestor,1,Lowest Common Ancestor,Lowest Common Ancestor with Static Trees,1178,,,1,1,O(n+m*log(log(n))),,,[[Unpublished report] Modified van Leeuwen [Static Trees] (1976)],Modified van Leeuwen [Static Trees],1976,[Unpublished report],,,,,,,O(n+m*log(log(n))),,"n: number of vertices
m: number of total number of operations (queries, links, and cuts)",,,Word RAM,words,O(n),n: 3,https://www.cs.bgu.ac.il/~segal/PAPERS2/tarj.pdf,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
58,Lowest Common Ancestor,1,,Lowest Common Ancestor with Linking Roots,1179,,,1,1,O(n+m*log(log(n))),,,[[Unpublished report] Modified van Leeuwen [Linking Roots] (1976)],Modified van Leeuwen [Linking Roots],1976,[Unpublished report],,,,,,,O(n+m*log(log(n))),,"n: number of vertices
m: number of total number of operations (queries, links, and cuts)",,,Word RAM,words,O(n),n: 3,https://www.cs.bgu.ac.il/~segal/PAPERS2/tarj.pdf,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
58,Lowest Common Ancestor,1,,Lowest Common Ancestor with Linking,1180,,,1,1,O(n+m*log(n)),,,[https://www.sciencedirect.com/science/article/pii/0022000083900065 Sleator and Tarjan [Linking] (1983)],Sleator and Tarjan [Linking],1983,https://www.sciencedirect.com/science/article/pii/0022000083900065,,,,,,,O(n+m*log(n)),,"n: number of vertices
m: number of total number of operations (queries, links, and cuts)",,,Word RAM,words,O(n),n: 3,https://www.cs.bgu.ac.il/~segal/PAPERS2/tarj.pdf,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
58,Lowest Common Ancestor,1,,Lowest Common Ancestor with Linking and Cutting,1181,,,1,1,O(n+m*log(n)),,,[https://www.sciencedirect.com/science/article/pii/0022000083900065 Sleator and Tarjan [Linking and Cutting] (1983)],Sleator and Tarjan [Linking and Cutting],1983,https://www.sciencedirect.com/science/article/pii/0022000083900065,,,,,,,O(n+m*log(n)),,"n: number of vertices
m: number of total number of operations (queries, links, and cuts)",,,Word RAM,words,O(n),n: 3,https://www.cs.bgu.ac.il/~segal/PAPERS2/tarj.pdf,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
58,Lowest Common Ancestor,2,Lowest Common Ancestor,Lowest Common Ancestor with Static Trees,1182,,,1,1,O(n+m),Any distribution of values?,(need to read entire input + all queries),"[https://www.semanticscholar.org/paper/Fast-Algorithms-for-Finding-Nearest-Common-Harel-Tarjan/8867d059dda279b1aed4a0301e4e46f9daf65174 Harel, Tarjan [Static Trees] (1984)]","Harel, Tarjan [Static Trees]",1984,https://www.semanticscholar.org/paper/Fast-Algorithms-for-Finding-Nearest-Common-Harel-Tarjan/8867d059dda279b1aed4a0301e4e46f9daf65174,2,1,,1,0,,O(n+m),,"n: number of vertices
m: number of total number of operations (queries, links, and cuts)",,,Word RAM,words,O(n),n: 3,https://www.cs.bgu.ac.il/~segal/PAPERS2/tarj.pdf,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
58,Lowest Common Ancestor,1,,Lowest Common Ancestor with Linking Roots,1183,,,1,1,"O(n+ m*alpha(m + n, n)) where alpha is the inverse Ackermann function",,,"[https://www.semanticscholar.org/paper/Fast-Algorithms-for-Finding-Nearest-Common-Harel-Tarjan/8867d059dda279b1aed4a0301e4e46f9daf65174 Harel, Tarjan [Linking Roots] (1984)]","Harel, Tarjan [Linking Roots]",1984,https://www.semanticscholar.org/paper/Fast-Algorithms-for-Finding-Nearest-Common-Harel-Tarjan/8867d059dda279b1aed4a0301e4e46f9daf65174,2,1,,1,0,,"O(n+ m*alpha(m + n, n)) where alpha is the inverse Ackermann function",,"n: number of vertices
m: number of total number of operations (queries, links, and cuts)",,,Word RAM,words,O(n),n: 3,https://www.cs.bgu.ac.il/~segal/PAPERS2/tarj.pdf,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
58,Lowest Common Ancestor,1,Lowest Common Ancestor,Lowest Common Ancestor with Static Trees,1184,,,1,1,O(m+log(n)),,,[https://epubs.siam.org/doi/abs/10.1137/0217079?journalCode=smjcat Schieber; Vishkin [Parallel] (1988)],Schieber; Vishkin [Parallel],1988,https://epubs.siam.org/doi/abs/10.1137/0217079?journalCode=smjcat,,,,0,0,,O(m+log(n)),,"n: number of vertices
m: number of total number of operations (queries, links, and cuts)",,,EREW PRAM,words,O(n) total (auxiliary?),n: 3,https://www.proquest.com/docview/919780720?pq-origsite=gscholar&fromopenview=true,,,0,,0,,0,1,O(n/log n),0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
58,Lowest Common Ancestor,2,Lowest Common Ancestor,Lowest Common Ancestor with Static Trees,1185,,,1,1,O(m+n),Any distribution of values?,(need to read entire input + all queries),"[https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.64.5439 Fischer, Heun (2006)]","Fischer, Heun",2006,https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.64.5439,,,,0,0,,O(m+n),,"n: number of vertices
m: number of total number of operations (queries, links, and cuts)",,,Word RAM,words,O(n),n: 3,https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.64.5439,,,0,,0,,0,1,O(n/log n),0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
58,Lowest Common Ancestor,1,Lowest Common Ancestor,Lowest Common Ancestor with Static Trees,1186,,,1,1,O(m*log(h)),,,[https://www.schoolofhaskell.com/user/edwardk/online-lca Kmett (2015)],Kmett,2015,https://www.schoolofhaskell.com/user/edwardk/online-lca,,,,0,0,,O(m*log(h)),,"n: number of vertices
m: number of total number of operations (queries, links, and cuts)
h: height of tree",,,Word RAM,words,,,,,,0,,0,,0,1,O(n/log n),0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
60,Clique Problems,1,Enumerating Maximal Cliques,"Enumerating Maximal Cliques, arbitrary graph",1187,,,1,1,O(delta^4),,,"[https://link.springer.com/chapter/10.1007/978-3-540-27810-8_23 Kazuhisa Makino, Takeaki Uno; Section 6 (2004)]","Kazuhisa Makino, Takeaki Uno; Section 6",2004,https://link.springer.com/chapter/10.1007/978-3-540-27810-8_23,,,,,,,O(delta^4),,"n: number of vertices
m: number of edges
delta: maximum degree of any vertex",,,Word RAM,words,O(n+m) auxiliary(?),"n: 5,
m: 3",https://link.springer.com/chapter/10.1007/978-3-540-27810-8_23,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,3SUM,1,,Integer 3SUM,1188,,,1,1,O(n^2 log n),,,[- Textbook Sort-and-Binary-Search (-)],Textbook Sort-and-Binary-Search,-,-,,,,,,,O(n^2 log n),,n: size of set,,,Word RAM,words,O(n),n: 3,Storing sorted list,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,3SUM,1,,Integer 3SUM,1189,,,1,1,O(n^2),,,[- Textbook Sort-and-Two-Sided-Traversal (-)],Textbook Sort-and-Two-Sided-Traversal,-,-,,,,,,,O(n^2),,n: size of set,,,Word RAM,words,O(n),n: 3,Storing sorted list,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,3SUM,1,,Integer 3SUM,1190,,,1,1,"O(n^2/max(w/(log w)^2, (log n)^2/(log log n)^2))",,,"[https://link.springer.com/article/10.1007/s00453-007-9036-3 Baran, Demaine, Patrascu (2008)]","Baran, Demaine, Patrascu",2008,https://link.springer.com/article/10.1007/s00453-007-9036-3,,,,,,,"O(n^2/max(w/(log w)^2, (log n)^2/(log log n)^2))",,"n: size of set
w: size of word",,,Word RAM,words,,,,,,1,Las Vegas,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,3SUM,1,,Integer 3SUM,1191,,,1,1,O(n^2/(w^2/(log w)^2)),,,"[https://link.springer.com/article/10.1007/s00453-007-9036-3 Baran, Demaine, Patrascu (2008)]","Baran, Demaine, Patrascu",2008,https://link.springer.com/article/10.1007/s00453-007-9036-3,,,,,,,O(n^2/(w^2/(log w)^2)),,"n: size of set
w: size of word",,,Circuit RAM with one nonstandard AC^0 operation,,,,,,,1,Las Vegas,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,3SUM,1,,Integer 3SUM,1192,,,1,1,O(n^2/MB),,,"[https://link.springer.com/article/10.1007/s00453-007-9036-3 Baran, Demaine, Patrascu (2008)]","Baran, Demaine, Patrascu",2008,https://link.springer.com/article/10.1007/s00453-007-9036-3,,,,,,,O(n^2/MB),,"n: size of set
w: size of word
B: size of block
M: size of memory",,,External memory,,,,,,,1,Las Vegas,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,3SUM,1,,Integer 3SUM,1193,,,1,1,O(n^2*(log M)^2/MB),,,"[https://link.springer.com/article/10.1007/s00453-007-9036-3 Baran, Demaine, Patrascu (2008)]","Baran, Demaine, Patrascu",2008,https://link.springer.com/article/10.1007/s00453-007-9036-3,,,,,,,O(n^2*(log M)^2/MB),,"n: size of set
w: size of word
B: size of block
M: size of memory",,,Cache oblivious,,,,,,,1,Las Vegas,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,3SUM,1,,Real 3SUM,1194,,,1,1,O(n^2/((log n)/(log log n))^2/3),,,"[https://ieeexplore.ieee.org/abstract/document/6979047 Gronlund, Pettie (2014)]","Gronlund, Pettie",2014,https://ieeexplore.ieee.org/abstract/document/6979047,,,,,,,O(n^2/((log n)/(log log n))^2/3),,n: size of set,,,Real RAM,words,,,,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,3SUM,1,,Real 3SUM,1195,,,1,1,O(n^2*(log log n)^2/(log n)),,,"[https://ieeexplore.ieee.org/abstract/document/6979047 Gronlund, Pettie (2014)]","Gronlund, Pettie",2014,https://ieeexplore.ieee.org/abstract/document/6979047,,,,,,,O(n^2*(log log n)^2/(log n)),,n: size of set,,,Real RAM,words,,,,,,1,Las Vegas,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,3SUM,1,,Real 3SUM,1196,,,1,1,O(n^2*(log log n)/(log n)),,,[https://link.springer.com/article/10.1007/s00453-015-0079-6 Freund (2017)],Freund,2017,https://link.springer.com/article/10.1007/s00453-015-0079-6,,,,,,,O(n^2*(log log n)/(log n)),,n: size of set,,,Real RAM,words,,,,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,3SUM,1,,Real 3SUM,1197,,,1,1,O(n^2*(log log n)^{O(1)}/(log n)^2),,,[https://dl.acm.org/doi/abs/10.1145/3363541 Chan (2018)],Chan,2018,https://dl.acm.org/doi/abs/10.1145/3363541,,,,,,,O(n^2*(log log n)^{O(1)}/(log n)^2),,n: size of set,,,Real RAM,words,,,,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
72,The Vertex Cover Problem,1,The Vertex Cover Problem,The Vertex Cover Problem,1198,,,1,1,"O(C(n, k)) (i.e. (n, k) binomial coefficient)",,,[ Exhaustive search (1940)],Exhaustive search,1940,,,,,,,,"O(C(n, k)) (i.e. (n, k) binomial coefficient)",,"n: number of vertices
m: number of edges
k: size of vertex cover",,,Word RAM,words,O(k) auxiliary,k: 3,Just need to keep track of current subset being checked,,,0,,0,,0,0,,0,0,,,,,,,,,,,,1,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
72,The Vertex Cover Problem,1,The Vertex Cover Problem,The Vertex Cover Problem,1199,,,1,1,O(kn+2^k k^2),,,"[https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.2.7270&rep=rep1&type=pdf Downey, Fellows (1995)]","Downey, Fellows",1995,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.2.7270&rep=rep1&type=pdf,,,,,,,O(kn+2^k k^2),,"n: number of vertices
m: number of edges
k: size of vertex cover",,,Word RAM,words,O(k^2) auxiliary,k: 5,Auxiliary graph contains O(k^2) edges unless the instance is rejected; rest of steps take O(k) auxiliary space at most,,,0,,0,,0,0,,0,0,,,,,,,,,,,,1,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
72,The Vertex Cover Problem,1,The Vertex Cover Problem,The Vertex Cover Problem,1200,,,1,1,O(3^k k^2+kn),,,[https://www.sciencedirect.com/science/article/pii/S0022000096900586 Papadimitriou and M Yannakakis 1996 + Buss (1996)],Papadimitriou and M Yannakakis 1996 + Buss,1996,https://www.sciencedirect.com/science/article/pii/S0022000096900586,,,,0,0,,O(3^k k^2+kn),,"n: number of vertices
m: number of edges
k: size of vertex cover",,,Word RAM,words,O(k^2) auxiliary?,k: 5,Auxiliary graph contains O(k^2) edges unless the instance is rejected; rest of steps take O(k) auxiliary space at most,,,0,,0,,0,0,,0,0,,,,,,,,,,,,1,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
72,The Vertex Cover Problem,1,The Vertex Cover Problem,The Vertex Cover Problem,1201,,,1,1,"O(kn+max((1.25542)^k k^2, (1.2906)^k k)",,,"[https://www.research-collection.ethz.ch/bitstream/handle/20.500.11850/69332/eth-4359-01.pdf Stege, Fellows (1999)]","Stege, Fellows",1999,https://www.research-collection.ethz.ch/bitstream/handle/20.500.11850/69332/eth-4359-01.pdf,,,,0,0,,"O(kn+max((1.25542)^k k^2, (1.2906)^k k)",,"n: number of vertices
m: number of edges
k: size of vertex cover",,,Word RAM,words,O(k^3) auxiliary? (potentially O(k^2)??),k: 6,(see remark in algo id #576),,,0,,0,,0,0,,0,0,,,,,,,,,,,,1,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
72,The Vertex Cover Problem,1,The Vertex Cover Problem,The Vertex Cover Problem,1202,,,1,1,O(kn+(1.2906)^k),,,"[https://mediatum.ub.tum.de/doc/1094228/file.pdf Stege, Fellows + Interleaving method (Niedermeier, Rossmanith) (2000)]","Stege, Fellows + Interleaving method (Niedermeier, Rossmanith)",2000,https://mediatum.ub.tum.de/doc/1094228/file.pdf,,,,0,0,,O(kn+(1.2906)^k),,"n: number of vertices
m: number of edges
k: size of vertex cover",,,Word RAM,words,O(k^3) auxiliary? (potentially O(k^2)??),k: 6,(see remark in algo id #576),,,0,,0,,0,0,,0,0,,,,,,,,,,,,1,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
80,Maximum subarray problem,1,,1-dimensional,1203,,,1,1,O(log n),"""Any distribution/runtime same regardless of input""",(same general behavior regardless of input),[https://www.sciencedirect.com/science/article/abs/pii/016781919400063G Wen (1995)],Wen,1995,https://www.sciencedirect.com/science/article/abs/pii/016781919400063G,,,,,,,O(log n),,n: length of array,,,EREW PRAM,words,,,,,,0,,0,,0,1,O(n/log n),0,0,,,,,,,,,,,,3,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
80,Maximum subarray problem,2,,2-dimensional,1204,,,1,1,O(n^6),^see above,^see above,[- brute force (1977)],brute force,1977,-,,,,,,,O(n^6),,n: dimension of array,,,Word RAM,words,O(1) auxiliary,n: 1,"keep track of which subarray is being computed, along with current maximum",,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
80,Maximum subarray problem,1,,2-dimensional,1205,,,1,1,O(n^3),^see above,^see above,[https://dl.acm.org/doi/pdf/10.1145/1968.381154 Bentley (1984)],Bentley,1984,https://dl.acm.org/doi/pdf/10.1145/1968.381154,,,,,,,O(n^3),,n: dimension of array,,,Word RAM,words,O(n^2) auxiliary?,n: 5,(i think you need to pre-process to get cumulative sums in each row?),,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
80,Maximum subarray problem,1,,2-dimensional,1206,,,1,1,O(n^3),^see above,^see above,[https://www.sciencedirect.com/science/article/pii/0167642387900347 Smith (1987)],Smith,1987,https://www.sciencedirect.com/science/article/pii/0167642387900347,,,,,,,O(n^3),,n: dimension of array,,,Word RAM,words,O(log n) auxiliary?,n: 2,divide-and-conquer,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
80,Maximum subarray problem,1,,2-dimensional,1207,,,1,1,O(n^3 * ((log log n)/(log n))^(1/2)),^see above,^see above,"[https://dl.acm.org/doi/pdf/10.5555/314613.314823 Tamaki, Tokuyama (exact) (1998)]","Tamaki, Tokuyama (exact)",1998,https://dl.acm.org/doi/pdf/10.5555/314613.314823,,,,,,,O(n^3 * ((log log n)/(log n))^(1/2)),,n: dimension of array,,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
80,Maximum subarray problem,1,,2-dimensional,1208,,,1,1,O(n^(omega) * (-log(epsilon))/epsilon),^see above,^see above,"[https://dl.acm.org/doi/pdf/10.5555/314613.314823 Tamaki, Tokuyama (approximate) (1998)]","Tamaki, Tokuyama (approximate)",1998,https://dl.acm.org/doi/pdf/10.5555/314613.314823,,,,,,,O(n^(omega) * (-log(epsilon))/epsilon),,"n: dimension of array
epsilon: approximation parameter",,,Word RAM,words,,,,,,0,,1,(1-epsilon),0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
80,Maximum subarray problem,1,,2-dimensional,1209,,,1,1,O(n^3 * ((log log n)/(log n))^(1/2)),^see above,^see above,[https://www.sciencedirect.com/science/article/pii/S1571066104003135?via%3Dihub Takaoka (2002)],Takaoka,2002,https://www.sciencedirect.com/science/article/pii/S1571066104003135?via%3Dihub,,,,,,,O(n^3 * ((log log n)/(log n))^(1/2)),,n: dimension of array,,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
80,Maximum subarray problem,1,,2-dimensional,1210,,,1,1,O(log^2 n),^see above,^see above,[https://www.sciencedirect.com/science/article/pii/0167642387900347 Smith (1987)],Smith,1987,https://www.sciencedirect.com/science/article/pii/0167642387900347,,,,,,,O(log^2 n),,n: dimension of array,,,PRAM (not sure which type),words,,,,,,0,,0,,0,1,?,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
80,Maximum subarray problem,1,,2-dimensional,1211,,,1,1,O(log n),^see above,^see above,[https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.24.1291&rep=rep1&type=pdf KALYAN PERUMALLA and NARSINGH DEO (1995)],KALYAN PERUMALLA and NARSINGH DEO,1995,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.24.1291&rep=rep1&type=pdf,,,,,,,O(log n),,n: dimension of array,,,CREW PRAM,words,,,,,,0,,0,,0,1,O(n^3 / log n),0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
80,Maximum subarray problem,1,,2-dimensional,1212,,,1,1,O(log n),^see above,^see above,[https://www.sciencedirect.com/science/article/abs/pii/016781919400063G Wen (1995)],Wen,1995,https://www.sciencedirect.com/science/article/abs/pii/016781919400063G,,,,,,,O(log n),,n: dimension of array,,,EREW PRAM,words,,,,,,0,,0,,0,1,O(n^3 / log n),0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
118,Wiener Index,2,,Minimum Wiener Connector problem,1213,,,1,1,2^(O(n)),Any distribution (runtime is same regardless of input),(same general behavior across all inputs),[ Exhaustive search (2015)],Exhaustive search,2015,,,,,,,,2^(O(n)),,"n: number of vertices
m: number of edges
q: number of query vertices",,,Word RAM,words,O(n) auxiliary,n: 3,"Keeps track of current subset being checked, minimum subset, and O(1) Wiener indices",,,0,,0,,0,0,,0,0,https://en.wikipedia.org/wiki/Wiener_connector,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
,Orthogonal Vectors,2,,k-OV,1214,,,1,1,O(d*n^k),Any distribution (runtime is same regardless of input),(same general behavior across all inputs),[- Exhaustive search (-)],Exhaustive search,-,-,,,,,,,$O(d*n^k)$,,"n: number of vectors per set
k: number of sets
d: dimension of each vector; d = omega(log(n))",,,Word RAM,words,O(k) auxiliary,k: 3,keeping track of which vectors we're looking at,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Orthogonal Vectors,1,,OV,1215,,,1,1,$O(n^{(2-1/O(d/log(n)))})$,,,"[https://epubs.siam.org/doi/abs/10.1137/1.9781611973730.17 Abboud, Williams, Yu (2015)]","Abboud, Williams, Yu",2015,https://epubs.siam.org/doi/abs/10.1137/1.9781611973730.17,,,,,,,$O(n^{(2-1/O(d/log(n)))})$,,"n: number of vectors per set
d: dimension of each vector; d = omega(log(n))",,,Word RAM,words,,,,,,1,Monte Carlo,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Orthogonal Vectors,1,,k-OV,1216,,,1,1,$O(n^{(k-1/O(d/log(n)))})$,,,"[https://epubs.siam.org/doi/abs/10.1137/1.9781611973730.17 Reduction to Abboud, Williams, Yu (2015)]","Reduction to Abboud, Williams, Yu",2015,https://epubs.siam.org/doi/abs/10.1137/1.9781611973730.17,,,,,,,$O(n^{(k-1/O(d/log(n)))})$,,"n: number of vectors per set
k: number of sets
d: dimension of each vector; d = omega(log(n))",,,Word RAM,words,,,,,,1,Monte Carlo,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Orthogonal Vectors,1,,OV,1217,,,1,1,$O(n^{(2-1/O(d/log(n)))})$,,,"[https://epubs.siam.org/doi/abs/10.1137/1.9781611974331.ch87 Chan, Williams (2016)]","Chan, Williams",2016,https://epubs.siam.org/doi/abs/10.1137/1.9781611974331.ch87,,,,,,,$O(n^{(2-1/O(d/log(n)))})$,,"n: number of vectors per set
d: dimension of each vector; d = omega(log(n))",,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Orthogonal Vectors,1,,k-OV,1218,,,1,1,$O(n^{(k-1/O(d/log(n)))})$,,,"[https://epubs.siam.org/doi/abs/10.1137/1.9781611974331.ch87 Reduction to Chan, Williams (2016)]","Reduction to Chan, Williams",2016,https://epubs.siam.org/doi/abs/10.1137/1.9781611974331.ch87,,,,,,,$O(n^{(k-1/O(d/log(n)))})$,,"n: number of vectors per set
k: number of sets
d: dimension of each vector; d = omega(log(n))",,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,k-Clique Problem,2,,k-Clique,1219,,,1,1,O(n^k),Any distribution (runtime is same regardless of input),(same general behavior across all inputs),[- Brute force enumeration (-)],Brute force enumeration,-,-,,,,,,,O(n^k),,"n: total number of vertices
k: desired clique size",,,Word RAM,words,O(k) auxiliary,k: 3,keeping track of which vertices we're looking at,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,k-Clique Problem,1,,k-Clique,1220,,,1,1,$O(n^{(k-(3-\omega)*floor(k/3)})$ where omega is the exponent on matrix multiplication,Any distribution (runtime is same regardless of input),this relies on matrix multiplication,"[https://dml.cz/bitstream/handle/10338.dmlcz/106381/CommentatMathUnivCarol_026-1985-2_22.pdf Nesetril, Poljak (1985)]","Nesetril, Poljak",1985,https://dml.cz/bitstream/handle/10338.dmlcz/106381/CommentatMathUnivCarol_026-1985-2_22.pdf,,,,,,,$O(n^(k-(3-\omega)*floor(k/3))$ where omega is the exponent on matrix multiplication,,"n: total number of vertices
k: desired clique size",,,Word RAM,words,O(n^(2k/3)) ish,"n: 7,
k: 8",matrix sizes,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Min-Weight k-Clique Problem,1,,3-Clique,1221,,,1,1,$O(n^3 / 2^{(log n)^{0.5}})$,,,[- APSP algorithm (-)],APSP algorithm,-,-,,,,,,,O(n^3 / 2^(log n)^0.5),,n: total number of vertices,,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Exact-Weight k-Clique Problem,1,,3-Clique,1222,,,1,1,O(n^3*(log log n)^2/(log n)),,,"[https://ieeexplore.ieee.org/abstract/document/6979047 Gronlund, Pettie (2014)]","Gronlund, Pettie",2014,https://ieeexplore.ieee.org/abstract/document/6979047,,,,,,,O(n^3*(log log n)^2/(log n)),,n: total number of vertices,,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
86,Graph Isomorphism Problem,1,,"Graph Isomporhism, Trivalent Graphs",1223,,,1,1,\exp(cn^{\frac{1}{2}} \log n),,,[https://epubs.siam.org/doi/10.1137/0209018 Babai 1980 (1980)],Babai 1980,1980,https://epubs.siam.org/doi/10.1137/0209018,,,,,,,\exp(cn^{\frac{1}{2}} \log n),,$n$: number of vertices in the larger graph,,,Word RAM,words,O(n^2),n: 5,https://epubs.siam.org/doi/epdf/10.1137/0209018,,,1,Las Vegas,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
86,Graph Isomorphism Problem,1,,"Graph Isomorphism, Bounded Vertex Valences",1224,,,1,1,\exp(n^{\frac{1}{2} + O(1)}),,,[https://epubs.siam.org/doi/10.1137/0209018 Babai 1980 (1980)],Babai 1980,1980,https://epubs.siam.org/doi/10.1137/0209018,,,,,,,\exp(n^{\frac{1}{2} + O(1)}),,$n$: number of vertices in the larger graph,,,Word RAM,words,O(n^2),n: 5,https://epubs.siam.org/doi/epdf/10.1137/0209018,,,1,Las Vegas,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
125,Self-Balancing Trees Creation,1,,,1225,,,1,1,O(nlogn),,,[https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.138.4859 Scapegoat Tree (1989)],Scapegoat Tree,1989,https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.138.4859,,,,1,0,,O(nlogn),,n: number of nodes,,,Word RAM,words,O(n),n: 3,Need to keep track of intermediary stages of tree before outputting,"""1""",,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
125,Self-Balancing Trees Creation,1,,,1226,,,1,1,O(nlogn),,,[http://faculty.washington.edu/aragon/pubs/rst89.pdf Treap (1989)],Treap,1989,http://faculty.washington.edu/aragon/pubs/rst89.pdf,,,,1,0,,O(nlogn),,n: number of nodes,,,Word RAM,words,O(n),n: 3,Need to keep track of intermediary stages of tree before outputting,"""1""",,1,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
125,Self-Balancing Trees Creation,1,,,1227,,,1,1,O(nlogn),,,[http://erikdemaine.org/papers/Tango_SICOMP/paper.pdf Tango Tree (2004)],Tango Tree,2004,http://erikdemaine.org/papers/Tango_SICOMP/paper.pdf,,,,1,0,,O(nlogn),,n: number of nodes,,,Word RAM,words,O(n),n: 3,Need to keep track of intermediary stages of tree before outputting,"""1""",,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
126,Self-Balancing Trees Insertion,1,,,1228,,,1,1,O(logn),,,[ AVL Tree (1962)],AVL Tree,1962,,,,,,0,,O(logn),,n: number of nodes,,,Word RAM,words,O(1),n: 1,Each node being changed requires constant auxiliary space to make changes; can reuse space across nodes being changed,1,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
126,Self-Balancing Trees Insertion,1,,,1229,,,1,1,O(logn) amortized,,,[ Tarjan Splay Tree (1985)],Tarjan Splay Tree,1985,,,,,,0,,O(n),,n: number of nodes,,,Word RAM,words,O(1),n: 1,^see above,1,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
126,Self-Balancing Trees Insertion,1,,,1230,,,1,1,O(b*log(n)/log(b))?,,,"[ Bayer, McCreight B-Tree (1970)]","Bayer, McCreight B-Tree",1970,,,,,,0,,O(b*log(n)/log(b))?,,"n: number of nodes
b: branching factor",,,Word RAM,words,O(b)?,"n: 1,
b: 3","^see above, but with branching factor involved",1,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
126,Self-Balancing Trees Insertion,1,,,1231,,,1,1,O(logn),,,[https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.138.4859 Scapegoat Tree (1989)],Scapegoat Tree,1989,https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.138.4859,,,,1,0,,O(n),,n: number of nodes,,,Word RAM,words,O(1)?,n: 1,^see above,1,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
126,Self-Balancing Trees Insertion,1,,,1232,,,1,1,O(logn),,,[http://faculty.washington.edu/aragon/pubs/rst89.pdf Treap (1989)],Treap,1989,http://faculty.washington.edu/aragon/pubs/rst89.pdf,,,,1,0,,O(n),,n: number of nodes,,,Word RAM,words,O(1)?,n: 1,^see above,1,,1,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
127,Self-Balancing Trees Deletion,1,,,1233,,,1,1,O(logn),,,[ AVL Tree (1962)],AVL Tree,1962,,,,,,0,,O(logn),,n: number of nodes,,,Word RAM,words,O(1),n: 1,^see above,1,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
127,Self-Balancing Trees Deletion,1,,,1234,,,1,1,O(logn) amortized,,,[ Tarjan Splay Tree (1985)],Tarjan Splay Tree,1985,,,,,,0,,O(n),,n: number of nodes,,,Word RAM,words,O(1),n: 1,^see above,1,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
127,Self-Balancing Trees Deletion,1,,,1235,,,1,1,O(b*log(n)/log(b))?,,,"[ Bayer, McCreight B-Tree (1970)]","Bayer, McCreight B-Tree",1970,,,,,,0,,O(b*log(n)/log(b))?,,"n: number of nodes
b: branching factor",,,Word RAM,words,O(b)?,"n: 1,
b: 3","^see above, but with branching factor involved",1,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
127,Self-Balancing Trees Deletion,1,,,1236,,,1,1,O(logn),,,[https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.138.4859 Scapegoat Tree (1989)],Scapegoat Tree,1989,https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.138.4859,,,,1,0,,O(n),,n: number of nodes,,,Word RAM,words,O(1)?,n: 1,^see above,1,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
127,Self-Balancing Trees Deletion,1,,,1237,,,1,1,O(logn),,,[http://faculty.washington.edu/aragon/pubs/rst89.pdf Treap (1989)],Treap,1989,http://faculty.washington.edu/aragon/pubs/rst89.pdf,,,,1,0,,O(n),,n: number of nodes,,,Word RAM,words,O(1)?,n: 1,^see above,1,,1,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
128,Self-Balancing Trees Search,1,,,1238,,,1,1,O(logn),,,[ AVL Tree (1962)],AVL Tree,1962,,,,,,0,,O(logn),,n: number of nodes,,,Word RAM,words,O(1),n: 1,Need to keep track of constant amount of info during search (i.e. which node we're on and what direction to go),1,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
128,Self-Balancing Trees Search,1,,,1239,,,1,1,O(logn) amortized,,,[ Tarjan Splay Tree (1985)],Tarjan Splay Tree,1985,,,,,,0,,O(n),,n: number of nodes,,,Word RAM,words,O(1),n: 1,^see above,1,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
128,Self-Balancing Trees Search,1,,,1240,,,1,1,O(b*log(n)/log(b))?,,,"[ Bayer, McCreight B-Tree (1970)]","Bayer, McCreight B-Tree",1970,,,,,,0,,O(b*log(n)/log(b))?,,"n: number of nodes
b: branching factor",,,Word RAM,words,O(1),n: 1,^see above,1,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
128,Self-Balancing Trees Search,1,,,1241,,,1,1,O(logn),,,[https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.138.4859 Scapegoat Tree (1989)],Scapegoat Tree,1989,https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.138.4859,,,,1,0,,O(nlogn),,n: number of nodes,,,Word RAM,words,O(1)?,n: 1,^see above,1,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
128,Self-Balancing Trees Search,1,,,1242,,,1,1,O(logn),,,[http://faculty.washington.edu/aragon/pubs/rst89.pdf Treap (1989)],Treap,1989,http://faculty.washington.edu/aragon/pubs/rst89.pdf,,,,1,0,,O(n),,n: number of nodes,,,Word RAM,words,O(1)?,n: 1,^see above,1,,1,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
128,Self-Balancing Trees Search,1,,,1243,,,1,1,O((k+1)log(log(n))),,,[http://erikdemaine.org/papers/Tango_SICOMP/paper.pdf Tango Tree (2004)],Tango Tree,2004,http://erikdemaine.org/papers/Tango_SICOMP/paper.pdf,,,,1,0,,O((k+1)log(log(n))),,"n: number of nodes
k: number of interleaves",,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,,,,,,,,,,,,,,Combinatorics,,,,,,,,,,,,,,,,,,,,,,
39,Nash Equilibria,1,,2 player games,1244,,,1,1,O(n^7)*,,https://www.academia.edu/1791725/An_experimental_analysis_of_Lemke_Howson_algorithm,[https://doi.org/10.1137/0112033 Lemke-Howson (1964)],Lemke-Howson Algorithm,1964,https://doi.org/10.1137/0112033,,,,,0,,Exponential,,"n: player 1 pure strategies
m: player 2 pure strategies",,,Word RAM,words,O(mn)?,,I am not sure if this can be optimized?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
39,Nash Equilibria,1,,"Graphical games, Multi-agent influence diagrams",1245,,,1,1,,,,"[https://www.semanticscholar.org/paper/A-Continuation-Method-for-Nash-Equilibria-in-Games-Blum-Shelton/4a3b80041922298db147debc2a2307bc4a5a42e9 Blum, Shelton, Koller]","Blum, Shelton, Koller",2003,https://www.semanticscholar.org/paper/A-Continuation-Method-for-Nash-Equilibria-in-Games-Blum-Shelton/4a3b80041922298db147debc2a2307bc4a5a42e9,,,,,,,Unknown?,,,,,Word RAM,words,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
39,Nash Equilibria,2,,2 player games,1246,,,1,1,,,,"[https://dl.acm.org/doi/10.1145/779928.779933 Lipton, Markakis, Mehta]","Lipton, Markakis and Mehta method",2003,https://dl.acm.org/doi/10.1145/779928.779933,,,,1,,"n: 7.5, eps: 8",O(n^{c log n/eps^2}),,"n: max of either player's pure strategies
eps: margin of improvement in Nash equilibrium",,,Word RAM words,words,O(log^2 n/eps^2),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
39,Nash Equilibria,2,,n player games,1247,,,1,1,,,,"[https://dl.acm.org/doi/10.1145/779928.779933 Lipton, Markakis, Mehta]","Lipton, Markakis and Mehta method 2",2003,https://dl.acm.org/doi/10.1145/779928.779933,,,,1,,"n: 7.5, k: 8, eps: 8",O(n^{ck^2 log (k^2n)/eps^2}),,"n: max of all players' pure strategies
k: number of players
eps: margin of improvement in Nash equilibrium",,,Word RAM words,words,O(k^2log^2 n/eps^2),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
39,Nash Equilibria,1,,n player games,1248,,,1,1,,,,"[https://www.aaai.org/Library/AAAI/2004/aaai04-105.php Porter, Nudleman, Shoham (2004)]",Support enumeration and search,2004,https://www.aaai.org/Library/AAAI/2004/aaai04-105.php,,,,,,,Unknown,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
39,Nash Equilibria,1,,n player games,1249,,,1,1,,,,"[https://www.aaai.org/Library/AAAI/2005/aaai05-078.php Sandholm, Gilpin, Conitzer]",Mixed Integer Programming,2005,https://www.aaai.org/Papers/AAAI/2005/AAAI05-078.pdf,,,,,,,Unknown,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
39,Nash Equilibria,1,,n player games,1250,,,1,1,,,,[https://doi.org/10.1016/j.jet.2008.06.002 Govindan and Wilson],Global Newton Method,2008,https://www.sciencedirect.com/science/article/pii/S0022053108000811,,,,,,,Unknown,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
69,4NF Decomposition,2,,4NF Decomposition for Functional and Multivalued Dependency Sets,1251,Synthesis Algorithm,,1,1,exponential,,,,Grahne and Räihä,1983,https://www.vldb.org/conf/1983/P186.PDF,,,,,,8,exponential,,"k: number of multivalued dependencies
n: number of attributes? (|U|)",,,Word RAM,words,exponential,k: 8,https://link.springer.com/article/10.1007/BF01934180,0,,0,,0,,0,0,,0,0,,,,,,,,,,,,8,,,Databases,,,,,,,,,,,,,,,,,,,,,,
69,4NF Decomposition,2,,4NF Decomposition for Conflict-Free Dependency Sets,1252,Multiway Decomposition Algorithm,,1,1,O(k^2 n^2),,,,Lien,1982,https://dl.acm.org/doi/abs/10.1145/319540.319546,,,,,,5,O(k^2 n^2),,"k: number of multivalued dependencies
n: number of attributes? (|U|)",,,Word RAM,words,O(k^2),k: 5,Derived: Uses an auxiliary array of size $k \times k$,1,,0,,0,,0,0,,0,0,,,,,,,,,,,,8,,,Databases,,,,,,,,,,,,,,,,,,,,,,
69,4NF Decomposition,0,,4NF Decomposition for Conflict-Free Dependency Sets,1253,,,1,1,poly-time,,,,Sciore,1981,https://dl.acm.org/doi/abs/10.1145/582318.582337,,,,,,7,poly-time,,"k: number of multivalued dependencies
n: number of attributes? (|U|)",,,Word RAM,words,,,,,,0,,0,,0,0,,0,0,,,,,,,,,,,,8,,,Databases,,,,,,,,,,,,,,,,,,,,,,
69,4NF Decomposition,2,,4NF Decomposition for Functional and Multivalued Dependency Sets,1254,,,1,1,exponential,,,,Fagin,1977,https://dl.acm.org/doi/abs/10.1145/320557.320571,,,,,,8,exponential,,"k: number of multivalued dependencies
n: number of attributes? (|U|)",,,Word RAM,words,exponential,k: 8,https://link.springer.com/article/10.1007/BF01934180,0,,0,,0,,0,0,,0,0,,,,,,,,,,,,8,,,Databases,,,,,,,,,,,,,,,,,,,,,,
,All-Pairs Shortest Paths (APSP),0,APSP,APSP,1255,,,,,,,,,Takaoka,2004,https://link.springer.com/chapter/10.1007/978-3-540-27798-9_31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,All-Pairs Shortest Paths (APSP),0,APSP,APSP,1256,,,,,,,,,Chan,2012,https://dl.acm.org/doi/pdf/10.1145/2344422.2344424,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
58,Lowest Common Ancestor,0.001,Lowest Common Ancestor,Lowest Common Ancestor with Static Trees,1257,,,1,1,O(m+n),Any distribution of values?,(need to read entire input + all queries),"[https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.64.5439 Fischer, Heun (2006)]","Fischer, Heun",2006,https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.64.5439,,,,0,0,,,,O(m+n),,,,,,"n: number of vertices
m: number of total number of operations (queries, links, and cuts)",,,,Word RAM,words,O(n),n: 3,https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.64.5439,,,,,0,,0,,0,1,O(n/log n),0,0,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics,,,,
25,Line Clipping,0.001,Convex Polygonal Window,convex and non-convex polyhedral window,1258,,,1,1,O(np)?,^ see above,^ see above,[https://onlinelibrary.wiley.com/doi/abs/10.1111/1467-8659.1510061 Skala (1996)],Skala,1996,https://onlinelibrary.wiley.com/doi/abs/10.1111/1467-8659.1510061,,,,0,0,#REF!,O(np)?,,"n: number of lines
p: number of faces on polyhedron",,,Word/Real RAM,,,,,,,,,,,,,,,,,"line clipping is the process of removing lines or portions of lines outside an area
 of interest. Typically; any line or part thereof which is outside of the viewing
 area is removed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,0,,,1259,,,,,,,,,"Nuutila, Soisalon-Soininen",1994,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=e6d552827145ff77513d73b6c47fcd0039876174,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Integer Factoring,0,,,1260,,,,,,,,,"Buhler, Lenstra, Pomerance ",1991,https://link.springer.com/chapter/10.1007/BFb0091539,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Integer Factoring,0,,,1261,,,,,,,,,"Pomerance, Wagstaff",1983,https://math.dartmouth.edu/~carlp/PDF/implementation.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),,APSP,APSP,1262,,,,,,,,,Fredman,1976,https://epubs.siam.org/doi/pdf/10.1137/0205006,,,,,,,O(n^3(log log n/ log n)^{1/3}),15.998,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),,APSP,APSP,1263,,,,,,,,,Takaoka,1992,https://www.sciencedirect.com/science/article/pii/002001909290200F,,,,,,, O(n^3(log log n/log n)^{1/2}),15.996,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
120,Integer Relation,0,,,1264,,,,,,,,,"Bailey, Broadhurst",2001,https://www.ams.org/journals/mcom/2001-70-236/S0025-5718-00-01278-3/S0025-5718-00-01278-3.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
107,Point-in-Polygon,0,,,1265,,,,,,,,,Skala,1994,https://www.academia.edu/download/66755734/1994_Point_in_Polygon_O_1_.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,0,,,1266,,,,,,,,,"Galil, Seiferas",1980,https://epubs.siam.org/doi/pdf/10.1137/0209032,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,0,,,1267,,,,,,,,,"Galil, Seiferas",1983,https://www.sciencedirect.com/science/article/pii/0022000083900028/pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),0,APSP,APSP,1268,,,,,,,,,Chan,2009,http://tmc.web.engr.illinois.edu/moreapsp.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),0,APSP,APSP,1269,,,,,,,,,"Galil, Margalit",1997,https://www.sciencedirect.com/science/article/pii/S0022000097913854/pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
86,Graph Isomorphism Problem,0.001,,Subgraph Isomorphism,1270,,,1,1,"Asymptotics not given, actual times. Check",,,[https://dl.acm.org/doi/10.1145/321921.321925 Ullman (1976)],Ullman,1976,https://dl.acm.org/doi/10.1145/321921.321925,,,,1,0,#VALUE!,,,,,,,,,,"n: max number of vertices between the two graphs
m: min number of vertices between the two graphs",n,,,Word RAM,,words, 3m,"n: 3
m: 3",O(mn)?,"Stores a constant number of n*m matrices, along with a constant number of vectors of length O(m+n)",1,0,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
